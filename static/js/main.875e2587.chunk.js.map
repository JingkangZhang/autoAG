{"version":3,"sources":["components/TopNav.js","components/form_test_case_components/FormFunctionName.js","components/form_test_case_components/FormFunctionParams.js","components/form_test_case_components/FormDescription.js","components/testArgs.js","components/form_test_case_components/FormTestCases.js","components/form_test_case_components/FormFullScore.js","components/form_test_case_components/FormTestType.js","components/form_test_case_components/FormTestName.js","components/form_test_case_components/FormPartialCredits.js","components/form_test_case_components/FormSkeletonCode.js","components/form_test_case_components/FormDisallowedUse.js","components/form_test_case_components/FormAdvancedSetting.js","components/FormTestCase.js","components/InputField.js","components/OutputField.js","App.js","serviceWorker.js","index.js"],"names":["TopNav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNav","bind","assertThisInitialized","toggleImportPopover","toggleHelp","state","navIsOpen","importPopoverOpen","helpOpen","setState","react_default","a","createElement","Navbar","className","color","light","expand","NavbarBrand","id","UncontrolledTooltip","placement","trigger","target","delay","arrowClassName","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Modal","toggle","ModalHeader","ModalBody","ModalFooter","Button","Input","type","name","href","height","class","viewBox","version","width","aria-hidden","fill-rule","d","React","PureComponent","FormFunctionName","functionName","alertClassName","alertbox","match","testIndex","FormGroup","Label","for","spellcheck","placeholder","onChange","formHandler","data-testid","value","Component","FormFunctionParams","functionParams","alert","FormDescription","description","isValidArgList","args","minNumOfArgs","maxNumOfArgs","functionParamsList","replace","split","numEqSigns","starPresents","numRegular","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","param","err","return","numArgs","f","count","stack","quoteOpen","i","length","c","charAt","pop","push","error","console","log","check","realCount","result","Boolean","FormTestCases","handleToggle","onExiting","onExited","collapse","numErrors","status","e","prevProps","prevState","currNumErrors","document","querySelectorAll","testCases","FormTestCases_FormTestCaseInner","testCaseData","testCaseIndex","ListGroup","Badge","pill","size","FormTestCaseInner","validationResult","alertContent","ListGroupItem","InputGroup","InputGroupAddon","addonType","InputGroupText","data-testcaseid","xmlns","points","FormFullScore","scoreString","fullScore","isNaN","FormTestType","testType","FormTestName","testName","FormPartialCredits","partialCredits","FormSkeletonCode","skeletonCode","FormDisallowedUse","modal","disallowedUse","FormDisallowedUse_DisallowedUseModal","DisallowedUseModal","Table","FormAdvancedSetting","pointsEnabled","form_test_case_components_FormFullScore","advancedSetting","form_test_case_components_FormPartialCredits","form_test_case_components_FormTestType","form_test_case_components_FormTestName","form_test_case_components_FormSkeletonCode","form_test_case_components_FormDisallowedUse","FormTestCase","testData","form_test_case_components_FormFunctionName","form_test_case_components_FormFunctionParams","form_test_case_components_FormDescription","form_test_case_components_FormTestCases","form_test_case_components_FormAdvancedSetting","InputField","testList","formState","tests","components_FormTestCase","Form","InputField_FormPointsEnabled","InputField_FormStarterCode","starterCode","FormPointsEnabled","data-content","checked","FormStarterCode","OutputField","JSON","stringify","App","handleInputChange","newFormState","dataset","testid","testcaseid","components_TopNav","react_split_es","sizes","minSize","components_InputField","components_OutputField","isLocalhost","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","getElementById","onbeforeunload","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.875e2587.chunk.js","sourcesContent":["import React from 'react';\n// import githubMark from '../GitHub-Mark-64px.png'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledTooltip,\n  Input,\n  Popover,PopoverHeader, PopoverBody,\n  Button,\n  Modal, ModalBody, ModalFooter, ModalHeader\n  } from 'reactstrap';\n\nclass TopNav extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleImportPopover = this.toggleImportPopover.bind(this);\n    this.toggleHelp = this.toggleHelp.bind(this);\n    this.state = {\n      navIsOpen: false,\n      importPopoverOpen: false,\n      helpOpen: false\n    };\n  }\n\n  toggleNav() {\n    this.setState({\n      navIsOpen: !this.state.navIsOpen\n    });\n  }\n\n  toggleImportPopover() {\n    this.setState({\n      importPopoverOpen: !this.state.importPopoverOpen\n    })\n  }\n\n  toggleHelp() {\n    this.setState({\n      helpOpen: !this.state.helpOpen\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Navbar className=\"topNav\" color=\"light\" light expand=\"sm\">\n\n          <NavbarBrand id=\"autoAGBrand\">\n            autoAG\n          </NavbarBrand>\n          <UncontrolledTooltip placement=\"right\" trigger=\"hover\"\n            target=\"autoAGBrand\" delay=\"{show:0, hide:0}\" arrowClassName=\"CalTooltipArrow\" className=\"CalTooltip\">\n            Much Love For Cal!\n          </UncontrolledTooltip>\n\n          <span id=\"navbarPython\">Python</span>\n          <UncontrolledTooltip placement=\"bottom\" trigger=\"hover\"\n            target=\"navbarPython\" >\n            Currently only available in Python. More languange support coming soon.\n          </UncontrolledTooltip>\n\n          <NavbarToggler onClick={this.toggleNav} />\n          <Collapse isOpen={this.state.navIsOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink onClick={this.toggleHelp}>Help and Usage</NavLink>\n              </NavItem>\n              <Modal isOpen={this.state.helpOpen} toggle={this.toggleHelp}>\n                <ModalHeader toggle={this.toggleHelp}>Modal title</ModalHeader>\n                <ModalBody>\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </ModalBody>\n                <ModalFooter>\n                  <Button color=\"secondary\" onClick={this.toggleHelp}>Close</Button>\n                </ModalFooter>\n              </Modal>\n              <NavItem>\n                <NavLink onClick={this.toggleImportPopover}>Open</NavLink>\n              </NavItem>\n\n              <Modal isOpen={this.state.importPopoverOpen} toggle={this.toggleImportPopover}>\n                <ModalHeader toggle={this.toggleImportPopover}>Select .autoag file to import</ModalHeader>\n                <ModalBody>\n                  <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n                </ModalBody>\n                <ModalFooter>\n                  <Button color=\"secondary\" onClick={this.toggleImportPopover}>Cancel</Button>{' '}\n                  <Button color=\"primary\" onClick={this.toggleImportPopover}>Do Something</Button>\n                </ModalFooter>\n              </Modal>\n\n              <NavItem>\n                <NavLink><span>Save Session</span></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink>Export</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"githubNav\" href=\"https://github.com/JingkangZhang/autoAG\"><svg height=\"24\" class=\"octicon octicon-mark-github\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"></path></svg></NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default TopNav\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int, functionName:String}\nclass FormFunctionName extends React.Component {\n  render() {\n    var functionName = this.props.functionName;\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    if (!functionName.match(/^[a-zA-Z_][a-zA-Z0-9_]*$/)) {\n      alertbox =\n        <span class=\"labelAlert\" id={\"functionNameAlert\"+ this.props.testIndex}>\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"functionNameAlert\"+ this.props.testIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            Please enter a valid Python function name.\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertBorder\";\n    }\n    return (\n      <FormGroup>\n        <div className={alertClassName}>\n          <Label for=\"functionName\" >\n            <span>Function Name:</span>\n            {alertbox}\n          </Label>\n          <Input type=\"text\" name=\"functionName\" spellcheck=\"false\"\n            className=\"forPlaceHolder codeInput\"\n            placeholder=\"Fibonacci\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={functionName} />\n        </div>\n      </FormGroup>\n    )\n  }\n}\nexport default FormFunctionName;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int,\n//      functionName:String, functionParams:String}\nclass FormFunctionParams extends React.Component {\n  render() {\n    var functionName = this.props.functionName;\n    var functionParams = this.props.functionParams;\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    if (!functionParams.match(\n        /^\\s*((\\*)?(\\*)?[a-zA-Z_][a-zA-Z0-9_]*(\\s*\\=\\s*[^ ]+?)?\\s*,\\s*)*((\\*)?(\\*)?[a-zA-Z_][a-zA-Z0-9_]*(\\s*\\=\\s*[^ ]+?)?\\s*,?\\s*)?$/)) {\n      alertbox =\n        <span class=\"labelAlert\" id={\"functionNameAlert\" + this.props.testIndex}>\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"functionNameAlert\" + this.props.testIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            Please enter a valid Python function parameter list.<br /> e.g., \"arg1, arg2=None, *args, **kwargs\".\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertBorder\";\n    }\n    return (\n      <FormGroup>\n        <div className={alertClassName}>\n          {alert}\n          <Label for=\"functionParams\">\n            <span>Function Parameters:</span>\n            {alertbox}\n          </Label>\n          <Input type=\"text\" name=\"functionParams\" spellcheck=\"false\"\n            // onFocus={e => e.target.select()}\n            className=\"forPlaceHolder codeInput\"\n            placeholder=\"arg1, arg2\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={functionParams} />\n        </div>\n      </FormGroup>\n    )\n  }\n}\nexport default FormFunctionParams;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int, description:String}\nclass FormDescription extends React.Component {\n  render() {\n    return (\n      <FormGroup>\n          <Label for=\"exampleText\">Question Description:</Label>\n          <Input type=\"textarea\" name=\"formDescription\" spellcheck=\"false\"\n          id=\"formDescription\"\n          onChange={this.props.formHandler}\n          className=\"forPlaceHolder codeInput\"\n          data-testid={this.props.testIndex}\n          placeholder=\"Return the Nth fibonacci number.\"\n          value={this.props.description} />\n        </FormGroup>\n    )\n  }\n}\nexport default FormDescription;\n","function isValidArgList(functionParams, args) {\n  var minNumOfArgs;\n  var maxNumOfArgs;\n  functionParams = functionParams.replace(/,\\s*$/,\"\");  //remove trailing comma\n  var functionParamsList = functionParams.split(/,/);\n  var numEqSigns = 0;\n  var starPresents = false;\n  var numRegular = 0;\n  for (var param of functionParamsList) {\n    param = param.replace(/^\\s*/, \"\");\n    param = param.replace(/\\s*$/, \"\");\n    if (param.match(/=/)) {\n      numEqSigns += 1;\n    } else if (param.match(/\\*/)) {\n      starPresents = true;\n      // console.log(param);\n    } else {\n      numRegular += 1;\n    }\n  }\n  // console.log(\"numEqSigns : \",numEqSigns, \"numRegular : \",numRegular,  \"starPresents : \", starPresents);\n  if (functionParams.match(/^\\s*$/)) {\n    maxNumOfArgs = 0;\n    minNumOfArgs = 0;\n    numRegular = 0;\n  } else {\n    minNumOfArgs = numRegular;\n    // console.log(\"here\", starPresents);\n    maxNumOfArgs = starPresents ? 666666 : numEqSigns + numRegular;\n  }\n  // Original Regex is as follows ({2,3} to be replaced by minNumOfArgs-1 and maxNumOfArgs-1)\n  // /^(\\s*(?:'[^']*?'|\"[^\"]*?\"|\\[[^\\]]*?\\]|\\([^)]*?\\)|[^,]+\\([^)]*?\\)|[^,]+),\\s*){1,2}(\\s*(?:'[^']*?'|\"[^\"]*?\"|\\[[^\\]]*?\\]|\\([^)]*?\\)|[^,]+\\([^)]*?\\)|[^, ][^,]*),?\\s*)$/\n  // var reLeft = \"^(\\\\s*(?:'[^']*?'|\\\"[^\\\"]*?\\\"|\\\\[[^\\\\]]*?\\\\]|\\\\([^)]*?\\\\)|[^,]+\\\\([^)]*?\\\\)|[^,]+),\\\\s*)\";\n  // var reRight = \"(\\\\s*(?:'[^']*?'|\\\"[^\\\"]*?\\\"|\\\\[[^\\\\]]*?\\\\]|\\\\([^)]*?\\\\)|[^,]+\\\\([^)]*?\\\\)|[^, ][^,]*),?\\\\s*)$\";\n  // var reMiddle = \"{\" + (minNumOfArgs - 1) + \",\" + (maxNumOfArgs === \"\" ? \"\" : maxNumOfArgs - 1) + \"}\"\n  // console.log(reLeft + reMiddle + reRight);\n  // var re = RegExp(reLeft + reMiddle + reRight,\"g\");\n  // var result = functionParams.match(/^\\s*$/) ?\n  //     args.match(/^\\s*$/) : args.match(re);\n  var numArgs = check(args); //{count:Int, error:Bool} count is never 0, because it's used to indicate the number of argument the user is typing\n  // console.log(minNumOfArgs);\n  var realCount = args.match(/^\\s*$/) ? 0 : numArgs.count;\n  var result =\n    (realCount >= minNumOfArgs\n      && realCount <= maxNumOfArgs && !numArgs.error);\n\n  // console.log({result: Boolean(result),\n  //   numRegular: numRegular,\n  //   numEqSigns: numEqSigns,\n  //   starPresents:starPresents,\n  //   error:numArgs.error,\n  //   count:numArgs.count\n  //   });\n  return {result: Boolean(result),\n    numRegular: numRegular,\n    numEqSigns: numEqSigns,\n    starPresents:starPresents,\n    error:numArgs.error,\n    count:numArgs.count,\n    realCount:realCount\n    };\n}\n\nfunction check(f) {\n  f = f.replace(/^\\s*,/, \"\");\n  f = f.replace(/,\\s*$/, \"\");\n  var count = 1;\n  var symbols = [\"(\", \"[\", \"'\", '\"'];\n  var stack = [];\n  var quoteOpen = false;\n  for (var i = 0; i < f.length; i++) {\n    var c = f.charAt(i);\n    if (c===\"'\" || c==='\"') {\n      if (stack.length != 0 && stack[stack.length-1] === c) {\n        stack.pop();\n        quoteOpen = false;\n      } else {\n        stack.push(c);\n        quoteOpen = true;\n      }\n    } else if (!quoteOpen) {\n      if (c === \",\" && stack.length == 0) {\n        count += 1;\n      } else if (c === \"(\" || c === \"[\" || c === \"{\") {\n        stack.push(c);\n      } else if (c === \")\") {\n        if (stack.length!=0 && stack[stack.length-1]===\"(\") {\n          stack.pop();\n        } else {\n          return {count:count, error:true};\n        }\n      } else if (c === \"]\") {\n          if (stack.length!=0 && stack[stack.length-1]===\"[\") {\n            // console.log(\"before splice\");\n            // console.log(stack);\n            stack.pop();\n            // console.log(\"spliced, stack now:\");\n            // console.log(stack);\n          } else {\n            // console.log(\"error here\");\n            return {count:count, error:true};\n          }\n      } else if (c === \"}\") {\n          if (stack.length!=0 && stack[stack.length-1]===\"{\") {\n            stack.pop();\n          } else {\n            return {count:count, error:true};\n          }\n      }\n    }\n  }\n  if (stack.length != 0) {\n    console.log(\"ended, returning error here\");\n    console.log(stack);\n    return {count:count, error:true};\n  }\n  return {count:count, error:false};\n}\n\nexport {isValidArgList};\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\nimport {isValidArgList} from \"../testArgs.js\";\n//props:{formHandler:Function, testIndex:Int, functionName:String,\n//        functionParams:String, testCases:[[\"\", \"\"],[\"\", \"\"]]}\nclass FormTestCases extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.state = {\n      collapse: false,\n      numErrors: 0,\n      status: 'Opened'\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  onExiting() {\n   this.setState({ status: 'Closing...' });\n  }\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    var currNumErrors =\n      document.querySelectorAll(\n        \"#\" + \"formTestCase\"+ this.props.testIndex + ' .alertTestCaseBorder').length;\n\n    if (prevState.numErrors !== currNumErrors) {\n      this.setState({numErrors: currNumErrors});\n    }\n  }\n  render() {\n    var testCases = [];\n    for (var i = 0; i < this.props.testCases.length; i++) {\n      testCases.push(\n        <FormTestCaseInner testCaseData={this.props.testCases[i]}\n          testCaseIndex={i}\n          testIndex={this.props.testIndex}\n          functionName={this.props.functionName}\n          functionParams={this.props.functionParams}\n          formHandler={this.props.formHandler}/>\n      )\n    }\n    return (\n      <ListGroup>\n        <Button className=\"testCaseHeader\"\n              color=\"dark\"\n              onClick={this.handleToggle}>\n          Test Cases\n          {this.state.numErrors !== 0 && this.state.collapse && this.state.status === 'Closed'?\n            <Badge className=\"numErrorBadge\" color=\"danger\" pill>{this.state.numErrors}</Badge>\n            :\n            \"\"\n          }\n        </Button>\n        <Collapse  isOpen={!this.state.collapse}\n          onExiting={this.onExiting}\n          onExited={this.onExited}>\n          <div class=\"testCasesGroup\">\n            {testCases}\n            <Button name=\"addTestCase\"\n              className=\"addTestCaseButton\"\n              data-testid={this.props.testIndex}\n              onClick={this.props.formHandler}\n              color=\"secondary\"\n              size=\"sm\">Add Test Case</Button>\n            <div class=\"testCaseBottomBorder\"></div>\n          </div>\n        </Collapse>\n      </ListGroup>\n    )\n  }\n}\n//props:{testCaseData:[\"\",\"\"], testIndex:Int, testCaseIndex:Int, functionName:scoreString,\n//        functionParams:String, formHandler:Function}\nclass FormTestCaseInner extends React.Component {\n  render() {\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    var validationResult = isValidArgList(this.props.functionParams,\n      this.props.testCaseData[0]);\n    if (!validationResult.result) {\n      var alertContent=\"\";\n      if (validationResult.error) {\n        alertContent = \"You have an unmatched symbol error in your No.\"+\n          validationResult.count + \" argument.\";\n      } else {\n        if (validationResult.starPresents === true) {\n          alertContent = \"You are supposed to pass in at least \" +\n            validationResult.numRegular +\" arguments. Found \" +\n            validationResult.realCount + \".\";\n        } else {\n          if (validationResult.numEqSigns === 0) {\n            alertContent = \"You are supposed to pass in \" +\n            validationResult.numRegular + \" arguments. Found \" +\n            validationResult.realCount + \".\";\n          } else {\n            alertContent = \"You are supposed to pass in \" +\n            validationResult.numRegular + \" required arguments, \" +\n            validationResult.numEqSigns +\" optional arguments. Found \" +\n            validationResult.realCount + \".\";\n          }\n        }\n      }\n      alertbox =\n        <span class=\"testCaseAlert\"\n          id={\"testCaseAlert\" +\n          this.props.testIndex + \"_\" +\n          this.props.testCaseIndex} >\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"testCaseAlert\" +\n                    this.props.testIndex + \"_\" +\n                    this.props.testCaseIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            {alertContent}\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertTestCaseBorder\";\n    }\n    var shouldDisableInput = validationResult.starPresents === false &&\n        validationResult.numEqSigns === 0 && validationResult.numRegular === 0;\n    return(\n      <ListGroupItem className={alertClassName}>\n        <div class=\"tg\">\n          <span class=\"tgAlert\">{alertbox}</span>\n          <span class=\"tgInput\">\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText >{this.props.functionName+\" (\"}</InputGroupText>\n              </InputGroupAddon>\n              <Input placeholder={this.props.functionParams} spellcheck=\"false\"\n                     className=\"forPlaceHolder\"\n                     name=\"testCaseInput\"\n                     data-testid={this.props.testIndex}\n                     data-testcaseid={this.props.testCaseIndex}\n                     onChange={this.props.formHandler}\n                     value={this.props.testCaseData[0]}/>\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText >)</InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </span>\n          <span class=\"tgArrow\">\n            <svg id=\"rightArrowSVG\" xmlns=\"http://www.w3.org/2000/svg\" width=\"27\" height=\"27\" viewBox=\"0 0 408 408\">\n              <polygon id=\"rightArrowPath\" points=\"204,102 204,0 408,204 204,408 204,306 0,306 0,102   \"/>\n            </svg>\n          </span>\n          <span class=\"tgOutput\">\n            <Input placeholder=\"expected output\"\n                   spellcheck=\"false\"\n                   className=\"forPlaceHolder\"\n                   name=\"testCaseOutput\"\n                   data-testid={this.props.testIndex}\n                   data-testcaseid={this.props.testCaseIndex}\n                   onChange={this.props.formHandler}\n                   value={this.props.testCaseData[1]}/>\n          </span>\n        </div>\n      </ListGroupItem>\n    )\n  }\n}\nexport default FormTestCases;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int, fullScore:String}\nclass FormFullScore extends React.Component {\n  render() {\n    var scoreString = this.props.fullScore;\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    if (scoreString===\"\" || isNaN(scoreString)) {\n      alertbox =\n        <span class=\"labelAlert\" id={\"fullScoreAlert\" + this.props.testIndex}>\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"fullScoreAlert\" + this.props.testIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            Please enter a valid number.\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertBorder\";\n    }\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <div className={alertClassName}>\n          <Label for=\"fullScore\">\n            <span>Full Score:</span>\n            {alertbox}\n          </Label>\n          <Input type=\"text\" name=\"fullScore\"\n            className=\"forPlaceHolder\"\n            placeholder=\"1\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={scoreString} />\n        </div>\n      </FormGroup>\n    )\n  }\n}\nexport default FormFullScore;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int, testType:String}\nclass FormTestType extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <Label for=\"testType\">Test Type:</Label>\n        <Input type=\"select\" name=\"testType\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={this.props.testType} >\n          <option value=\"simple\">simple function</option>\n          <option value=\"unit\">unit test</option>\n        </Input>\n      </FormGroup>\n    )\n  }\n}\nexport default FormTestType;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int,\n//  functionName:String, testName:String}\nclass FormTestName extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <Label for=\"testName\" >\n          Test Name:\n        </Label>\n        <Input type=\"text\" name=\"testName\" spellcheck=\"false\"\n          className=\"forPlaceHolder codeInput\"\n          placeholder={\"Default: \" + this.props.functionName}\n          onChange={this.props.formHandler}\n          data-testid={this.props.testIndex}\n          value={this.props.testName} />\n      </FormGroup>\n    )\n  }\n}\nexport default FormTestName;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int,\n//  partialCredits:String}\nclass FormPartialCredits extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <Label for=\"partialCredits\">Partial Credits:</Label>\n        <Input type=\"select\" name=\"partialCredits\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={this.props.partialCredits} >\n          <option value=\"none\">none</option>\n          <option value=\"linear\">linear</option>\n        </Input>\n      </FormGroup>\n    )\n  }\n}\nexport default FormPartialCredits;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int,\n//  partialCredits:String}\nclass FormSkeletonCode extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <Label for=\"skeletonCode\">Skeleton Code:</Label>\n        <Input type=\"textarea\" name=\"skeletonCode\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            className=\"forPlaceHolder\"\n            placeholder=\"'*** YOUR CODE HERE ***'\"\n            value={this.props.skeletonCode} >\n        </Input>\n      </FormGroup>\n    )\n  }\n}\nexport default FormSkeletonCode;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse, Table,\n  UncontrolledTooltip, Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap';\nimport FilteredMultiSelect from 'react-filtered-multiselect';\n\n//props:{formHandler:Function, testIndex:Int,\n//  disallowedUse:String}\nclass FormDisallowedUse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n  render() {\n    var s = this.props.disallowedUse;\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    if (!s.match(/^(?:\\s*([\"'])(?:Add|And|Assert|Assign|AugAssign|BitAnd|BitOr|BitXor|Break|Recursion|ClassDef|Continue|Del|Delete|Dict|DictComp|Div|Ellipsis|Eq|ExceptHandler|ExtSlice|FloorDiv|For|FunctionDef|GeneratorExp|Global|Gt|GtE|If|IfExp|Import|ImportFrom|In|Index|Invert|Is|IsNot|LShift|Lambda|List|ListComp|Lt|LtE|Mod|Mult|Nonlocal|Not|NotEq|NotIn|Or|Pass|Pow|RShift|Raise|Return|Set|SetComp|Slice|Starred|Sub|Subscript|Try|Tuple|UAdd|USub|While|With|Yield|YieldFrom)\\1\\s*,\\s*)*(?:\\s*([\"'])(?:Add|And|Assert|Assign|AugAssign|BitAnd|BitOr|BitXor|Break|Recursion|ClassDef|Continue|Del|Delete|Dict|DictComp|Div|Ellipsis|Eq|ExceptHandler|ExtSlice|FloorDiv|For|FunctionDef|GeneratorExp|Global|Gt|GtE|If|IfExp|Import|ImportFrom|In|Index|Invert|Is|IsNot|LShift|Lambda|List|ListComp|Lt|LtE|Mod|Mult|Nonlocal|Not|NotEq|NotIn|Or|Pass|Pow|RShift|Raise|Return|Set|SetComp|Slice|Starred|Sub|Subscript|Try|Tuple|UAdd|USub|While|With|Yield|YieldFrom)\\2\\s*)?$/)) {\n      alertbox =\n        <span class=\"labelAlert\" id={\"disallowedUseAlert\"+ this.props.testIndex}>\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"disallowedUseAlert\"+ this.props.testIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            Please enter valid names (exactly as shown, case sensitive) surrounded by quotes and separated by commas.\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertBorder\";\n    }\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <div className={alertClassName}>\n          <Label for=\"disallowedUse\" >\n            <span>\n              Disallowed Use:\n              <span\n                class=\"disallowedUseModalLauncher\"\n                onClick={this.toggle}\n                >?</span>\n              <DisallowedUseModal\n                modal={this.state.modal}\n                toggle={this.toggle}/>\n            </span>\n            {alertbox}\n          </Label>\n          <Input type=\"text\" name=\"disallowedUse\" spellcheck=\"false\"\n            className=\"forPlaceHolder\"\n            placeholder=\"'While', 'For'\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={this.props.disallowedUse} />\n        </div>\n      </FormGroup>\n\n    )\n  }\n\n}\nclass DisallowedUseModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.modal} toggle={this.props.toggle}>\n        <ModalHeader>Construct Check For Disallowed Use</ModalHeader>\n        <ModalBody>\n          <p>Credits: Berkeley CS61A course staff.</p>\n          <p>This amazing python module wrote by CS61A staff checks for certain usage patterns in a python file. Very useful, for example, when you want your testees write a recursive/iterative solution without using loops/recursive calls.</p>\n          <p>To include these checks for disallowed usages, put the names on the left column in quotes and separate them with commas.</p>\n          <p>e.g., 'Add', 'Pow'</p>\n<Table size=\"sm\"><thead><tr><th>Name</th><th>Pattern</th></tr></thead><tbody><tr><td>Add</td><td>+</td></tr><tr><td>And</td><td>and</td></tr><tr><td>Assert</td><td>assert</td></tr><tr><td>Assign</td><td>=</td></tr><tr><td>AugAssign</td><td>op=</td></tr><tr><td>BitAnd</td><td>&</td></tr><tr><td>BitOr</td><td>|</td></tr><tr><td>BitXor</td><td>^</td></tr><tr><td>Break</td><td>break</td></tr><tr><td>Recursion</td><td>recursive call</td></tr><tr><td>ClassDef</td><td>class</td></tr><tr><td>Continue</td><td>continue</td></tr><tr><td>Del</td><td>del</td></tr><tr><td>Delete</td><td>delete</td></tr><tr><td>Dict</td><td>{\"{\"}...{\"}\"}</td></tr><tr><td>DictComp</td><td>{\"{\"}...{\"}\"}</td></tr><tr><td>Div</td><td>/</td></tr><tr><td>Ellipsis</td><td>...</td></tr><tr><td>Eq</td><td>==</td></tr><tr><td>ExceptHandler</td><td>except</td></tr><tr><td>ExtSlice</td><td>[::]</td></tr><tr><td>FloorDiv</td><td>//</td></tr><tr><td>For</td><td>for</td></tr><tr><td>FunctionDef</td><td>def</td></tr><tr><td>GeneratorExp</td><td>(... for ...)</td></tr><tr><td>Global</td><td>global</td></tr><tr><td>Gt</td><td>&gt;</td></tr><tr><td>GtE</td><td>&gt;=</td></tr><tr><td>If</td><td>if</td></tr><tr><td>IfExp</td><td>...if...else...</td></tr><tr><td>Import</td><td>import</td></tr><tr><td>ImportFrom</td><td>from ... import ...</td></tr><tr><td>In</td><td>in</td></tr><tr><td>Index</td><td>...[...]</td></tr><tr><td>Invert</td><td>~</td></tr><tr><td>Is</td><td>is</td></tr><tr><td>IsNot</td><td>is not </td></tr><tr><td>LShift</td><td>&lt;&lt;</td></tr><tr><td>Lambda</td><td>lambda</td></tr><tr><td>List</td><td>[...]</td></tr><tr><td>ListComp</td><td>[...for...]</td></tr><tr><td>Lt</td><td>&lt;</td></tr><tr><td>LtE</td><td>&lt;=</td></tr><tr><td>Mod</td><td>%</td></tr><tr><td>Mult</td><td>*</td></tr><tr><td>Nonlocal</td><td>nonlocal</td></tr><tr><td>Not</td><td>not</td></tr><tr><td>NotEq</td><td>!=</td></tr><tr><td>NotIn</td><td>not in</td></tr><tr><td>Or</td><td>or</td></tr><tr><td>Pass</td><td>pass</td></tr><tr><td>Pow</td><td>**</td></tr><tr><td>RShift</td><td>&gt;&gt;</td></tr><tr><td>Raise</td><td>raise</td></tr><tr><td>Return</td><td>return</td></tr><tr><td>Set</td><td>{\"{\"} ... {\"}\"} (set)</td></tr><tr><td>SetComp</td><td>{\"{\"} ... for ... {\"}\"} (set)</td></tr><tr><td>Slice</td><td>[ : ]</td></tr><tr><td>Starred</td><td></td></tr><tr><td>Sub</td><td>-</td></tr><tr><td>Subscript</td><td>[]</td></tr><tr><td>Try</td><td>try</td></tr><tr><td>Tuple</td><td>(... , ... )</td></tr><tr><td>UAdd</td><td>+</td></tr><tr><td>USub</td><td>-</td></tr><tr><td>While</td><td>while</td></tr><tr><td>With</td><td>with</td></tr><tr><td>Yield</td><td>yield</td></tr><tr><td>YieldFrom</td><td>yield from</td></tr></tbody></Table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggle}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    )\n  }\n}\nexport default FormDisallowedUse;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\nimport FormFullScore from './FormFullScore';\nimport FormTestType from './FormTestType';\nimport FormTestName from './FormTestName';\nimport FormPartialCredits from './FormPartialCredits';\nimport FormSkeletonCode from './FormSkeletonCode';\nimport FormDisallowedUse from './FormDisallowedUse';\n\n//props:{\n//  formHandler:Function,\n//  testIndex:Int,\n//  pointsEnabled: Boolean,\n//  functionName: String,\n//  advancedSetting: {\n//    fullScore: \"1\",\n//    testType: \"simple\",\n//    testName: \"\",\n//    partialCredits: \"none\",\n//    skeletonCode: \"\",\n//    testForDisallowedUse: String,\n//  }\n//}\nclass FormAdvancedSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.state = {\n      collapse: true,\n      numErrors: 0,\n      status: 'Closed'\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  onExiting() {\n   this.setState({ status: 'Closing...' });\n  }\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    var currNumErrors =\n      document.querySelectorAll(\n        \"#\" + \"formTestCase\"+ this.props.testIndex + ' .advancedSetting .alertBorder').length;\n\n    if (prevState.numErrors !== currNumErrors) {\n      this.setState({numErrors: currNumErrors});\n    }\n  }\n  render() {\n    return (\n      <div class=\"advancedSetting\">\n        <Button className=\"advancedSettingHeader\"\n              color=\"dark\"\n              onClick={this.handleToggle}>\n          Advanced Settings\n          {this.state.numErrors !== 0 && this.state.collapse && this.state.status === 'Closed'?\n            <Badge className=\"numErrorBadge\" color=\"danger\" pill>{this.state.numErrors}</Badge>\n            :\n            \"\"\n          }\n        </Button>\n        <Collapse  isOpen={!this.state.collapse}\n          onExiting={this.onExiting}\n          onExited={this.onExited}>\n          <div class=\"advancedSettingGroup\">\n            {this.props.pointsEnabled &&\n              <FormFullScore\n                formHandler={this.props.formHandler}\n                testIndex={this.props.testIndex}\n                fullScore={this.props.advancedSetting.fullScore}/>\n            }\n            {this.props.pointsEnabled &&\n              <FormPartialCredits\n                formHandler={this.props.formHandler}\n                testIndex={this.props.testIndex}\n                partialCredits={this.props.advancedSetting.partialCredits}/>\n            }\n            <FormTestType\n              formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              testType={this.props.advancedSetting.testType} />\n            <FormTestName\n              formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              functionName={this.props.functionName}\n              testName={this.props.advancedSetting.testName} />\n            <FormSkeletonCode\n              formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              skeletonCode={this.props.advancedSetting.skeletonCode} />\n            <FormDisallowedUse\n              formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              disallowedUse={this.props.advancedSetting.disallowedUse} />\n            <div class=\"advancedSettingBottomBorder\"></div>\n          </div>\n\n        </Collapse>\n      </div>\n    )\n  }\n}\nexport default FormAdvancedSetting;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\nimport FormFunctionName from './form_test_case_components/FormFunctionName';\nimport FormFunctionParams from './form_test_case_components/FormFunctionParams';\nimport FormDescription from './form_test_case_components/FormDescription';\nimport FormTestCases from './form_test_case_components/FormTestCases';\nimport FormAdvancedSetting from './form_test_case_components/FormAdvancedSetting';\n// import FormFunctionName from './form_test_case_components/FormFunctionName';\n// import FormFunctionName from './form_test_case_components/FormFunctionName';\n// import FormFunctionName from './form_test_case_components/FormFunctionName';\n{\n//  props:{\n//     testData: {\n//       functionName: \"\",\n//       functionParams: \"\",\n//       description: \"\",\n//       testCases: [[\"\", \"\"]],\n//       advancedSetting: {\n//         fullScore: \"1\",\n//         testType: \"simple\",\n//         testName: \"\",\n//         partialCredits: \"none\",\n//         skeletonCode: \"\",\n//         testForDisallowedUse: [],\n//       }\n//     },\n//     testIndex: Int,\n//     className: String,\n//     pointsEnabled: Boolean,\n//     formHandler: Function\n// }\n}\nclass FormTestCase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.state = {\n      collapse: false,\n      numErrors: 0,\n      status: 'Closed'\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  onExiting() {\n   this.setState({ status: 'Closing...' });\n  }\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    var currNumErrors =\n      document.querySelectorAll(\n        \"#\" + \"formTestCase\"+ this.props.testIndex + ' .alertBorder').length +\n      document.querySelectorAll(\n        \"#\" + \"formTestCase\"+ this.props.testIndex + ' .alertTestCaseBorder').length;\n\n    if (prevState.numErrors !== currNumErrors) {\n      this.setState({numErrors: currNumErrors});\n    }\n  }\n  render() {\n    return (\n      <div class=\"formTestCase\"\n        id={\"formTestCase\"+ this.props.testIndex}>\n      <Button className=\"testHeader\" onClick={this.handleToggle}>\n        {\"Q\" + (this.props.testIndex + 1) + \" : \"}\n        {this.props.testData.advancedSetting.testName!==\"\" ?\n          this.props.testData.advancedSetting.testName\n          :\n          this.props.testData.functionName===\"\" ?\n            \"Untitled\"\n            :\n            this.props.testData.functionName\n        }\n\n        {this.state.numErrors !== 0 && this.state.collapse && this.state.status === 'Closed'?\n          <Badge className=\"numErrorBadge\" color=\"danger\" pill>{this.state.numErrors}</Badge>\n          :\n          \"\"\n        }\n\n      </Button>\n      <Collapse  isOpen={!this.state.collapse}\n        onExiting={this.onExiting}\n        onExited={this.onExited}>\n        <div className=\"testCaseBody\">\n          <FormFunctionName formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionName={this.props.testData.functionName} />\n          <FormFunctionParams formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionName={this.props.testData.functionName}\n            functionParams={this.props.testData.functionParams} />\n          <FormDescription formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            description={this.props.testData.description} />\n          <FormTestCases formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionName={this.props.testData.functionName}\n            functionParams={this.props.testData.functionParams}\n            testCases={this.props.testData.testCases} />\n          <FormAdvancedSetting formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            pointsEnabled={this.props.pointsEnabled}\n            functionName={this.props.testData.functionName}\n            advancedSetting={this.props.testData.advancedSetting} />\n        </div>\n      </Collapse>\n      </div>\n    )\n  }\n}\n\nexport default FormTestCase;\n","import React, { Component } from 'react';\nimport {\n  Form, Label, FormGroup, Input, Button, Collapse\n} from 'reactstrap';\nimport FormTestCase from \"./FormTestCase.js\"\n//props:{\n//  formState:{\n//    pointsEnabled: Bool,\n//    starterCode:String,\n//    tests:[{},{}]\n//  },\n//  formHandler:Function\n//}\nclass InputField extends React.Component {\n  render() {\n    var testList = [];\n    for (var i = 0; i < this.props.formState.tests.length; i++) {\n      testList.push(\n        <FormTestCase testData={this.props.formState.tests[i]}\n          testIndex={i}\n          pointsEnabled={this.props.formState.pointsEnabled}\n          formHandler={this.props.formHandler}/>\n      )\n    }\n    return (\n      <Form>\n        <FormPointsEnabled formHandler={this.props.formHandler}\n              pointsEnabled={this.props.formState.pointsEnabled} />\n        <FormStarterCode formHandler={this.props.formHandler}\n          starterCode={this.props.starterCode} />\n        {testList}\n        <Button name=\"addTest\" onClick={this.props.formHandler}\n          color=\"secondary\" size=\"sm\">Add Test</Button>\n      </Form>\n    )\n  }\n}\n//props:{pointsEnabled:Bool, formHandler:Function}\nclass FormPointsEnabled extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"pointsEnabledGroup\" check>\n        <Label check>\n            <span class=\"pointsEnabledButtonGroup\"\n              data-content= {\n                this.props.pointsEnabled ?\n                \"Scored\"\n                :\n                \"Unscored\"\n              }>\n              <input class=\"tgl tgl-light pointsEnabled\" id=\"cb1\"\n                   type=\"checkbox\" name=\"pointsEnabled\"\n                   onChange={this.props.formHandler}\n                   checked={this.props.pointsEnabled}/>\n              <label class=\"tgl-btn\" for=\"cb1\"></label>\n            </span>\n        </Label>\n\n      </FormGroup>\n    )\n  }\n}\n//props:{starterCode:String, formHandler:Function}\nclass FormStarterCode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.state = {\n      collapse: true\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  render() {\n    return (\n      <div class=\"starterCodeForm\">\n        <Button className=\"starterCodeHeader\" onClick={this.handleToggle}>\n          Starter Code\n        </Button>\n        <Collapse  isOpen={!this.state.collapse}>\n          <div>\n            <Form >\n              <FormGroup id=\"starterFormGroup\">\n                <Label for=\"starterCodeTextarea\">To be placed at the beginning of the homework file. </Label>\n                <Input type=\"textarea\"\n                  value={this.props.starterCode}\n                  onChange={this.props.formHandler}\n                  name=\"starterCode\"\n                  id=\"starterCodeTextarea\"\n                  className=\"codeInput forPlaceHolder\"\n                  placeholder=\"from math import *\">\n                </Input>\n              </FormGroup>\n            </Form>\n          </div>\n        </Collapse>\n\n      </div>\n\n    )\n  }\n}\nexport default InputField\n","import React, { Component } from 'react';\nclass OutputField extends React.Component {\n  render() {\n    return (\n      <textarea value={JSON.stringify(this.props.formState)}></textarea>\n    )\n  }\n}\nexport default OutputField\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Split from 'react-split'\nimport TopNav from './components/TopNav';\nimport InputField from './components/InputField';\nimport OutputField from './components/OutputField';\n\nimport {\n  Container, Row, Col,\n} from 'reactstrap';\n\n// if (process.env.NODE_ENV !== 'production') {\n  // const {whyDidYouUpdate} = require('why-did-you-update');\n  // whyDidYouUpdate(React);\n// }\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      formState:{\n        pointsEnabled: false,\n        starterCode: \"\",\n        tests: [\n          createInitialTestData()\n        ]\n      },\n    };\n  }\n\n  handleInputChange(e) {\n    var newFormState = this.state.formState;\n    switch(e.target.name) {\n      case \"pointsEnabled\":\n        newFormState[\"pointsEnabled\"] = e.target.checked;\n        break;\n      case \"starterCode\":\n        newFormState[\"starterCode\"] = e.target.value;\n        break;\n      case \"addTest\":\n        newFormState[\"tests\"].push(createInitialTestData());\n        break;\n      case \"testType\":\n        newFormState[\"tests\"][e.target.dataset.testid].advancedSetting\n            .testType = e.target.value;\n        break;\n      case \"fullScore\":\n        newFormState[\"tests\"][e.target.dataset.testid].advancedSetting\n            .fullScore = e.target.value;\n        break;\n      case \"functionName\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .functionName = e.target.value;\n        break;\n      case \"functionParams\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .functionParams = e.target.value;\n        break;\n      case \"formDescription\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .description = e.target.value;\n        break;\n      case \"addTestCase\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .testCases.push([\"\",\"\"]);\n        break;\n      case \"testCaseInput\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .testCases[e.target.dataset.testcaseid][0] = e.target.value;\n        break;\n      case \"testCaseOutput\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .testCases[e.target.dataset.testcaseid][1] = e.target.value;\n        break;\n      case \"testName\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .advancedSetting.testName = e.target.value;\n        break;\n      case \"partialCredits\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .advancedSetting.partialCredits = e.target.value;\n        break;\n      case \"skeletonCode\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .advancedSetting.skeletonCode = e.target.value;\n        break;\n      case \"disallowedUse\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .advancedSetting.disallowedUse = e.target.value;\n        break;\n      default:\n    }\n    this.setState({formState: newFormState});\n  }\n  render() {\n    return (\n      <div>\n        <TopNav />\n        <Split\n          className=\"split\"\n          sizes={[60, 40]}\n          minSize={[350, 200]}\n          >\n            <InputField formState={this.state.formState}\n                formHandler={this.handleInputChange}/>\n            <OutputField formState={this.state.formState}/>\n        </Split>\n      </div>\n    );\n  }\n}\nfunction createInitialTestData() {\n  return {\n    functionName: \"\",\n    functionParams: \"\",\n    description: \"\",\n    testCases: [[\"\", \"\"]],\n    advancedSetting: {\n      fullScore: \"1\",\n      testType: \"simple\",\n      testName: \"\",\n      partialCredits: \"none\",\n      skeletonCode: \"'*** YOUR CODE HERE ***'\",\n      disallowedUse: \"\",\n    }\n  };\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nwindow.onbeforeunload = function() {\n    return true;\n};\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}