{"version":3,"sources":["components/TopNav.js","components/FormTestCase.js","components/testArgs.js","components/InputField.js","components/OutputField.js","App.js","serviceWorker.js","index.js"],"names":["TopNav","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNav","bind","assertThisInitialized","toggleImportPopover","toggleHelp","state","navIsOpen","importPopoverOpen","helpOpen","setState","react_default","a","createElement","Navbar","className","color","light","expand","NavbarBrand","id","UncontrolledTooltip","placement","trigger","target","delay","arrowClassName","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Modal","toggle","ModalHeader","ModalBody","ModalFooter","Button","Input","type","name","href","height","class","viewBox","version","width","aria-hidden","fill-rule","d","React","PureComponent","FormTestCase","handleToggle","collapse","e","testData","testName","functionName","pointsEnabled","FormTestCase_FormFullScore","formHandler","testIndex","fullScore","FormTestCase_FormTestCaseTestType","testType","FormTestCase_FormFunctionName","FormTestCase_FormFunctionParams","functionParams","FormTestCase_FormDescription","description","FormTestCase_FormTestCases","testCases","Component","FormFullScore","scoreString","alert","isNaN","Alert","FormGroup","Label","for","placeholder","onChange","data-testid","value","FormTestCaseTestType","FormFunctionName","match","FormFunctionParams","FormDescription","FormTestCases","i","length","push","FormTestCase_FormTestCaseInner","testCaseData","testCaseIndex","ListGroup","size","FormTestCaseInner","validationResult","args","minNumOfArgs","maxNumOfArgs","functionParamsList","replace","split","numEqSigns","starPresents","numRegular","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","param","err","return","numArgs","f","count","stack","c","charAt","splice","error","check","realCount","result","console","log","Boolean","isValidArgList","ListGroupItem","Container","fluid","Row","Col","sm","InputGroup","InputGroupAddon","addonType","InputGroupText","data-testcaseid","xmlns","points","InputField","testList","formState","tests","components_FormTestCase","Form","InputField_FormPointsEnabled","FormPointsEnabled","checked","OutputField","App","handleInputChange","testForDisallowedUse","partialCredits","skeletonCode","newFormState","dataset","testid","testcaseid","components_TopNav","components_InputField","components_OutputField","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3604427d.chunk.js","sourcesContent":["import React from 'react';\n// import githubMark from '../GitHub-Mark-64px.png'\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledTooltip,\n  Input,\n  Popover,PopoverHeader, PopoverBody,\n  Button,\n  Modal, ModalBody, ModalFooter, ModalHeader\n  } from 'reactstrap';\n\nclass TopNav extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleImportPopover = this.toggleImportPopover.bind(this);\n    this.toggleHelp = this.toggleHelp.bind(this);\n    this.state = {\n      navIsOpen: false,\n      importPopoverOpen: false,\n      helpOpen: false\n    };\n  }\n\n  toggleNav() {\n    this.setState({\n      navIsOpen: !this.state.navIsOpen\n    });\n  }\n\n  toggleImportPopover() {\n    this.setState({\n      importPopoverOpen: !this.state.importPopoverOpen\n    })\n  }\n\n  toggleHelp() {\n    this.setState({\n      helpOpen: !this.state.helpOpen\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Navbar className=\"topNav\" color=\"light\" light expand=\"sm\">\n\n          <NavbarBrand id=\"autoAGBrand\">autoAG</NavbarBrand>\n          <UncontrolledTooltip placement=\"right\" trigger=\"hover\"\n            target=\"autoAGBrand\" delay=\"{show:0, hide:0}\" arrowClassName=\"CalTooltipArrow\" className=\"CalTooltip\">\n            Much Love For Cal!\n          </UncontrolledTooltip>\n\n          <NavbarToggler onClick={this.toggleNav} />\n          <Collapse isOpen={this.state.navIsOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink onClick={this.toggleHelp}>Help and Usage</NavLink>\n              </NavItem>\n              <Modal isOpen={this.state.helpOpen} toggle={this.toggleHelp}>\n                <ModalHeader toggle={this.toggleHelp}>Modal title</ModalHeader>\n                <ModalBody>\n                  Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n                </ModalBody>\n                <ModalFooter>\n                  <Button color=\"secondary\" onClick={this.toggleHelp}>Close</Button>\n                </ModalFooter>\n              </Modal>\n              <NavItem>\n                <NavLink onClick={this.toggleImportPopover}>Import</NavLink>\n              </NavItem>\n\n              <Modal isOpen={this.state.importPopoverOpen} toggle={this.toggleImportPopover}>\n                <ModalHeader toggle={this.toggleImportPopover}>Select .autoag file to import</ModalHeader>\n                <ModalBody>\n                  <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n                </ModalBody>\n                <ModalFooter>\n                  <Button color=\"secondary\" onClick={this.toggleImportPopover}>Cancel</Button>{' '}\n                  <Button color=\"primary\" onClick={this.toggleImportPopover}>Do Something</Button>\n                </ModalFooter>\n              </Modal>\n\n              <NavItem>\n                <NavLink><span>Save Session</span></NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink>Export</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink className=\"githubNav\" href=\"https://github.com/JingkangZhang/autoAG\"><svg height=\"24\" class=\"octicon octicon-mark-github\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"></path></svg></NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default TopNav\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse\n} from 'reactstrap';\nimport {isValidArgList} from \"./testArgs.js\";\n{\n  // props:{\n  //   testData:{\n  //     testType: \"simple\",\n  //     functionName: \"Fibonacci\",\n  //     testName: \"Fibonacci\",\n  //     functionParams: \"\",\n  //     description: \"\",\n  //     testCases: [[\"0, 0\", \"0\"]],\n  //     testForDisallowedUse: [],\n  //     fullScore: null,\n  //     partialCredits: \"none\",\n  //     skeletonCode: \"\"\n  //   },\n  //   testIndex: Int,\n  //   pointsEnabled: Bool,\n  //   formHandler: Function\n  // }\n}\nclass FormTestCase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.state = {\n      collapse: false\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  render() {\n    return (\n      <div className={this.props.className}>\n      <Button className=\"testHeader\" onClick={this.handleToggle}>\n        {this.props.testData.testName===\"\" ?\n          this.props.testData.functionName\n          :\n          this.props.testData.testName\n        }\n      </Button>\n      <Collapse  isOpen={!this.state.collapse}>\n        <div className=\"testCaseBody\">\n          {this.props.pointsEnabled &&\n            <FormFullScore formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              fullScore={this.props.testData.fullScore}/>\n          }\n          <FormTestCaseTestType formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            testType={this.props.testData.testType} />\n          <FormFunctionName formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionName={this.props.testData.functionName} />\n          <FormFunctionParams formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionName={this.props.testData.functionName}\n            functionParams={this.props.testData.functionParams} />\n          <FormDescription formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            description={this.props.testData.description} />\n          <FormTestCases formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionName={this.props.testData.functionName}\n            functionParams={this.props.testData.functionParams}\n            testCases={this.props.testData.testCases} />\n        </div>\n      </Collapse>\n\n      </div>\n\n    )\n  }\n}\n\n\n//props:{formHandler:Function, testIndex:Int, fullScore:String}\nclass FormFullScore extends React.Component {\n  render() {\n    var scoreString = this.props.fullScore;\n    var alert=\"\";\n    if (scoreString===\"\" || isNaN(scoreString)) {\n      alert =\n        <Alert color=\"warning\">\n          Please enter a valid number for full score for current test.\n        </Alert>\n    }\n    return (\n      <FormGroup>\n        {alert}\n        <Label for=\"fullScore\">Full Score:</Label>\n        <Input type=\"text\" name=\"fullScore\"\n          // onFocus={e => e.target.select()}\n          className=\"forPlaceHolder\"\n          placeholder=\"1\"\n          onChange={this.props.formHandler}\n          data-testid={this.props.testIndex}\n          value={scoreString} />\n      </FormGroup>\n    )\n  }\n}\n//props:{formHandler:Function, testIndex:Int, testType:String}\nclass FormTestCaseTestType extends React.Component {\n  render() {\n    return (\n      <FormGroup>\n        <Label for=\"testType\">Test Type:</Label>\n        <Input type=\"select\" name=\"testType\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={this.props.testType} >\n          <option value=\"simple\">simple function</option>\n          <option value=\"unit\">unit test</option>\n        </Input>\n      </FormGroup>\n    )\n  }\n}\n//props:{formHandler:Function, testIndex:Int, functionName:String}\nclass FormFunctionName extends React.Component {\n  render() {\n    var functionName = this.props.functionName;\n    var alert=\"\";\n    if (!functionName.match(/^[a-zA-Z_][a-zA-Z0-9_]*$/)) {\n      alert =\n        <Alert color=\"warning\">\n          Please enter a valid Python function name.\n          Also, avoid using Python keywords (not checked here).\n        </Alert>\n    }\n    return (\n      <FormGroup>\n        {alert}\n        <Label for=\"functionName\">Function Name:</Label>\n        <Input type=\"text\" name=\"functionName\"\n          // onFocus={e => e.target.select()}\n          className=\"forPlaceHolder\"\n          placeholder=\"Fibonacci\"\n          onChange={this.props.formHandler}\n          data-testid={this.props.testIndex}\n          value={functionName} />\n      </FormGroup>\n    )\n  }\n}\n//props:{formHandler:Function, testIndex:Int,\n//      functionName:String, functionParams:String}\nclass FormFunctionParams extends React.Component {\n  render() {\n    var functionName = this.props.functionName;\n    var functionParams = this.props.functionParams;\n    var alert=\"\";\n    if (!functionParams.match(\n        /^\\s*((\\*)?(\\*)?[a-zA-Z_][a-zA-Z0-9_]*(\\s*\\=\\s*[^ ]+?)?\\s*,\\s*)*((\\*)?(\\*)?[a-zA-Z_][a-zA-Z0-9_]*(\\s*\\=\\s*[^ ]+?)?\\s*,?\\s*)?$/)) {\n      alert =\n        <Alert color=\"warning\">\n          Please enter a valid Python function parameter list.<br /> e.g., \"arg1, arg2=None, *args, **kwargs\".\n        </Alert>\n    }\n    return (\n      <FormGroup>\n        {alert}\n        <Label for=\"functionParams\">Function Parameters:</Label>\n        <Input type=\"text\" name=\"functionParams\"\n          // onFocus={e => e.target.select()}\n          className=\"forPlaceHolder\"\n          placeholder=\"arg1, arg2\"\n          onChange={this.props.formHandler}\n          data-testid={this.props.testIndex}\n          value={functionParams} />\n      </FormGroup>\n    )\n  }\n}\n//props:{formHandler:Function, testIndex:Int, description:String}\nclass FormDescription extends React.Component {\n  render() {\n    return (\n      <FormGroup>\n          <Label for=\"exampleText\">Question Description:</Label>\n          <Input type=\"textarea\" name=\"formDescription\" id=\"formDescription\"\n          onChange={this.props.formHandler}\n          // onFocus={e => e.target.select()}\n          className=\"forPlaceHolder\"\n          data-testid={this.props.testIndex}\n          placeholder=\"Return the Nth fibonacci number.\"\n          value={this.props.description} />\n        </FormGroup>\n    )\n  }\n}\n//props:{formHandler:Function, testIndex:Int, functionName:String,\n//        functionParams:String, testCases:[[\"\", \"\"],[\"\", \"\"]]}\nclass FormTestCases extends React.Component {\n  render() {\n    var testCases = [];\n    for (var i = 0; i < this.props.testCases.length; i++) {\n      testCases.push(\n        <FormTestCaseInner testCaseData={this.props.testCases[i]}\n          testCaseIndex={i}\n          testIndex={this.props.testIndex}\n          functionName={this.props.functionName}\n          functionParams={this.props.functionParams}\n          formHandler={this.props.formHandler}/>\n      )\n    }\n    return (\n      <ListGroup>\n        {testCases}\n        <Button name=\"addTestCase\"\n                data-testid={this.props.testIndex}\n                onClick={this.props.formHandler}\n                color=\"secondary\"\n                size=\"sm\">Add Test Case</Button>\n      </ListGroup>\n    )\n  }\n}\n//props:{testCaseData:[\"\",\"\"], testIndex:Int, testCaseIndex:Int, functionName:scoreString,\n//        functionParams:String, formHandler:Function}\nclass FormTestCaseInner extends React.Component {\n  render() {\n    var alert=\"\";\n    var validationResult = isValidArgList(this.props.functionParams,\n      this.props.testCaseData[0]);\n    if (!validationResult.result) {\n      if (validationResult.error) {\n        alert =\n          <Alert color=\"warning\">\n            You have an unmatched symbol error in your No.{validationResult.count} argument.\n          </Alert>\n      } else {\n        if (validationResult.starPresents === true) {\n          alert =\n            <Alert color=\"warning\">\n              You are supposed to pass in at least {validationResult.numRegular} arguments. Found {validationResult.realCount}.\n            </Alert>\n        } else {\n          if (validationResult.numEqSigns === 0) {\n            alert =\n              <Alert color=\"warning\">\n                You are supposed to pass in {validationResult.numRegular} arguments. Found {validationResult.realCount}.\n              </Alert>\n          } else {\n            alert =\n              <Alert color=\"warning\">\n                You are supposed to pass in {validationResult.numRegular} required arguments, {validationResult.numEqSigns} optional arguments. Found {validationResult.realCount}.\n              </Alert>\n          }\n        }\n      }\n    }\n    var shouldDisableInput = validationResult.starPresents === false &&\n        validationResult.numEqSigns === 0 && validationResult.numRegular === 0;\n    return(\n      <ListGroupItem>\n        <Container fluid=\"true\">\n          <Row>\n            {alert}\n          </Row>\n          <Row>\n            <Col sm=\"7\">\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>{this.props.functionName+\" (\"}</InputGroupText>\n                </InputGroupAddon>\n                <Input placeholder={this.props.functionParams}\n                       className=\"forPlaceHolder\"\n                       name=\"testCaseInput\"\n                       data-testid={this.props.testIndex}\n                       data-testcaseid={this.props.testCaseIndex}\n                       onChange={this.props.formHandler}\n                       value={this.props.testCaseData[0]}/>\n                <InputGroupAddon addonType=\"append\">\n                  <InputGroupText>)</InputGroupText>\n                </InputGroupAddon>\n              </InputGroup>\n            </Col>\n            <Col sm=\"1\">\n              <svg id=\"rightArrowSVG\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 408 408\">\n                <polygon id=\"rightArrowPath\" points=\"204,102 204,0 408,204 204,408 204,306 0,306 0,102   \"/>\n              </svg>\n            </Col>\n            <Col sm=\"4\">\n              <Input placeholder=\"expected output\"\n                     className=\"forPlaceHolder\"\n                     name=\"testCaseOutput\"\n                     data-testid={this.props.testIndex}\n                     data-testcaseid={this.props.testCaseIndex}\n                     onChange={this.props.formHandler}\n                     value={this.props.testCaseData[1]}/>\n            </Col>\n          </Row>\n        </Container>\n      </ListGroupItem>\n    )\n  }\n}\n\n\nexport default FormTestCase\n","function isValidArgList(functionParams, args) {\n  var minNumOfArgs;\n  var maxNumOfArgs;\n  functionParams = functionParams.replace(/,\\s*$/,\"\");  //remove trailing comma\n  var functionParamsList = functionParams.split(/,/);\n  var numEqSigns = 0;\n  var starPresents = false;\n  var numRegular = 0;\n  for (var param of functionParamsList) {\n    param = param.replace(/^\\s*/, \"\");\n    param = param.replace(/\\s*$/, \"\");\n    if (param.match(/\\=/)) {\n      numEqSigns += 1;\n    } else if (param.match(/\\*/)) {\n      starPresents = true;\n      // console.log(param);\n    } else {\n      numRegular += 1;\n    }\n  }\n  // console.log(\"numEqSigns : \",numEqSigns, \"numRegular : \",numRegular,  \"starPresents : \", starPresents);\n  if (functionParams.match(/^\\s*$/)) {\n    maxNumOfArgs = 0;\n    minNumOfArgs = 0;\n    numRegular = 0;\n  } else {\n    minNumOfArgs = numRegular;\n    // console.log(\"here\", starPresents);\n    maxNumOfArgs = starPresents ? 666666 : numEqSigns + numRegular;\n  }\n  // Original Regex is as follows ({2,3} to be replaced by minNumOfArgs-1 and maxNumOfArgs-1)\n  // /^(\\s*(?:'[^']*?'|\"[^\"]*?\"|\\[[^\\]]*?\\]|\\([^)]*?\\)|[^,]+\\([^)]*?\\)|[^,]+),\\s*){1,2}(\\s*(?:'[^']*?'|\"[^\"]*?\"|\\[[^\\]]*?\\]|\\([^)]*?\\)|[^,]+\\([^)]*?\\)|[^, ][^,]*),?\\s*)$/\n  // var reLeft = \"^(\\\\s*(?:'[^']*?'|\\\"[^\\\"]*?\\\"|\\\\[[^\\\\]]*?\\\\]|\\\\([^)]*?\\\\)|[^,]+\\\\([^)]*?\\\\)|[^,]+),\\\\s*)\";\n  // var reRight = \"(\\\\s*(?:'[^']*?'|\\\"[^\\\"]*?\\\"|\\\\[[^\\\\]]*?\\\\]|\\\\([^)]*?\\\\)|[^,]+\\\\([^)]*?\\\\)|[^, ][^,]*),?\\\\s*)$\";\n  // var reMiddle = \"{\" + (minNumOfArgs - 1) + \",\" + (maxNumOfArgs === \"\" ? \"\" : maxNumOfArgs - 1) + \"}\"\n  // console.log(reLeft + reMiddle + reRight);\n  // var re = RegExp(reLeft + reMiddle + reRight,\"g\");\n  // var result = functionParams.match(/^\\s*$/) ?\n  //     args.match(/^\\s*$/) : args.match(re);\n  var numArgs = check(args); //{count:Int, error:Bool} count is never 0, because it's used to indicate the number of argument the user is typing\n  // console.log(minNumOfArgs);\n  var realCount = args.match(/^\\s*$/) ? 0 : numArgs.count;\n  var result =\n    (realCount >= minNumOfArgs\n      && realCount <= maxNumOfArgs && !numArgs.error);\n\n  console.log({result: Boolean(result),\n    numRegular: numRegular,\n    numEqSigns: numEqSigns,\n    starPresents:starPresents,\n    error:numArgs.error,\n    count:numArgs.count\n    });\n  return {result: Boolean(result),\n    numRegular: numRegular,\n    numEqSigns: numEqSigns,\n    starPresents:starPresents,\n    error:numArgs.error,\n    count:numArgs.count,\n    realCount:realCount\n    };\n}\n\nfunction check(f) {\n  f = f.replace(/^\\s*,/, \"\");\n  f = f.replace(/,\\s*$/, \"\");\n  var count = 1;\n  var symbols = [\"(\", \"[\", \"'\", '\"'];\n  var stack = [];\n  for (var i = 0; i < f.length; i++) {\n    var c = f.charAt(i);\n    if (c===\"'\" || c==='\"') {\n      if (stack.length != 0 && stack[stack.length] === c) {\n        stack.splice(stack.length, 1);\n      }\n      else{\n        stack.push(c);\n      }\n    }\n    else if (c === \",\" && stack.length == 0) {\n      count += 1;\n    }\n    else if (c === \"(\" || c === \"[\") {\n      stack.push(c);\n    }\n    else if (c === \")\") {\n      if (stack.length!=0 && stack[stack.length]===\"(\") {\n        stack.splice(stack.length, 1);\n      }\n      else {\n        return {count:count, error:true};\n      }\n    }\n    else if (c === \"]\") {\n      if (stack.length!=0 && stack[stack.length]===\"[\") {\n        stack.splice(stack.length, 1);\n      }\n      else {\n        return {count:count, error:true};\n      }\n    }\n  }\n  if (stack.length != 0) {\n    return {count:count, error:true};\n  }\n  return {count:count, error:false};\n}\n\nexport {isValidArgList};\n","import React, { Component } from 'react';\nimport {\n  Form, Label, FormGroup, Input, Button\n} from 'reactstrap';\nimport FormTestCase from \"./FormTestCase.js\"\n//props:{formState:{pointsEnabled: Bool, tests:[{},{}]}, formHandler:Function}\nclass InputField extends React.Component {\n  render() {\n    var testList = [];\n    for (var i = 0; i < this.props.formState.tests.length; i++) {\n      testList.push(\n        <FormTestCase testData={this.props.formState.tests[i]} testIndex={i}\n          className=\"formTestCase\"\n          pointsEnabled={this.props.formState.pointsEnabled}\n          formHandler={this.props.formHandler}/>\n      )\n    }\n    return (\n      <Form>\n        <FormPointsEnabled formHandler={this.props.formHandler}\n              pointsEnabled={this.props.formState.pointsEnabled}/>\n        {testList}\n        <Button name=\"addTest\" onClick={this.props.formHandler}\n          color=\"secondary\" size=\"sm\">Add Test</Button>\n      </Form>\n    )\n  }\n}\n//props:{pointsEnabled:Bool, formHandler:Function}\nclass FormPointsEnabled extends React.Component {\n  render() {\n    return (\n      <FormGroup check>\n        <Label check>\n          <Input type=\"checkbox\" name=\"pointsEnabled\"\n              onChange={this.props.formHandler} checked={this.props.pointsEnabled}/>{' '}\n          Points enabled\n        </Label>\n      </FormGroup>\n    )\n  }\n}\n\nexport default InputField\n","import React, { Component } from 'react';\nclass OutputField extends React.Component {\n  render() {\n    return (\n      <textarea value={this.props.formState.pointsEnabled}></textarea>\n    )\n  }\n}\nexport default OutputField\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport TopNav from './components/TopNav'\nimport InputField from './components/InputField'\nimport OutputField from './components/OutputField'\n\nimport {\n  Container, Row, Col,\n} from 'reactstrap';\n\n// if (process.env.NODE_ENV !== 'production') {\n  // const {whyDidYouUpdate} = require('why-did-you-update');\n  // whyDidYouUpdate(React);\n// }\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n\n    this.state = {\n      formState:{\n        pointsEnabled: false,\n        tests: [\n          createInitialTestData()\n        ]\n      },\n      formHandler: this.handleInputChange\n    };\n  }\n\n  handleInputChange(e) {\n    var newFormState = this.state.formState;\n    switch(e.target.name) {\n      case \"pointsEnabled\":\n        newFormState[\"pointsEnabled\"] = e.target.checked;\n        break;\n      case \"addTest\":\n        newFormState[\"tests\"].push(createInitialTestData());\n        break;\n      case \"testType\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .testType = e.target.value;\n        break;\n      case \"fullScore\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .fullScore = e.target.value;\n        break;\n      case \"functionName\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .functionName = e.target.value;\n        break;\n      case \"functionParams\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .functionParams = e.target.value;\n        break;\n      case \"formDescription\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .description = e.target.value;\n        break;\n      case \"addTestCase\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .testCases.push([\"\",\"\"]);\n        break;\n      case \"testCaseInput\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .testCases[e.target.dataset.testcaseid][0] = e.target.value;\n        break;\n      case \"testCaseOutput\":\n        newFormState[\"tests\"][e.target.dataset.testid]\n            .testCases[e.target.dataset.testcaseid][1] = e.target.value;\n        break;\n      default:\n    }\n    this.setState({formState: newFormState});\n  }\n\n  render() {\n    // const topNav = <TopNav />;\n    return (\n      <Container fluid=\"true\">\n        <Row >\n          <Col className=\"NavCol\">\n            <TopNav />\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"7\">\n            <InputField formState={this.state.formState}\n                formHandler={this.state.formHandler}/>\n          </Col>\n          <Col sm=\"5\">\n            <OutputField formState={this.state.formState}/>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\nfunction createInitialTestData() {\n  return {\n    testType: \"simple\",\n    functionName: \"Fibonacci\",\n    testName: \"\",\n    functionParams: \"arg1, arg2\",\n    description: \"\",\n    testCases: [[\"\", \"\"]],\n    testForDisallowedUse: [],\n    fullScore: \"1\",\n    partialCredits: \"none\",\n    skeletonCode: \"\"\n  };\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}