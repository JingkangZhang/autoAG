{"version":3,"sources":["services/index.js","components/Spinner/index.jsx","containers/generateTest.js","containers/generateHomeworkText.js","containers/TopNav/index.jsx","containers/form_test_case_components/FormFunctionName.js","containers/form_test_case_components/FormFunctionParams.js","containers/form_test_case_components/FormDescription.js","containers/testArgs.js","containers/form_test_case_components/FormTestCases.js","containers/form_test_case_components/FormFullScore.js","containers/form_test_case_components/FormTestType.js","containers/form_test_case_components/FormTestName.js","containers/form_test_case_components/FormPartialCredits.js","containers/form_test_case_components/FormSkeletonCode.js","containers/form_test_case_components/FormDisallowedUse.js","containers/form_test_case_components/FormAdvancedSetting.js","containers/FormTestCase.js","containers/form_unit_test_components/UnitTestCode.js","containers/form_unit_test_components/FormUnitTestCases.js","containers/form_unit_test_components/FormUnitDisplay.js","containers/form_unit_test_components/FormUnitAdvancedSetting.js","containers/FormUnitTestCase.js","containers/InputField.js","containers/output_components/HomeworkPreview.js","containers/output_components/TestSummaryQuestion.js","containers/output_components/TestSummary.js","containers/OutputField.js","HomeworkEditor.jsx","containers/SubmitSolution/HomeworkEntry/index.jsx","utils/index.js","containers/SubmitSolution/SubmitModal/index.jsx","containers/SubmitSolution/SubmitStatus/index.jsx","containers/SubmitSolution/index.jsx","serviceWorker.js","index.js","App.jsx"],"names":["axios","require","default","URL","uploadAutograder","name","body","Promise","resolve","reject","method","url","params","data","then","response","homeworkId","catch","error","concat","status","message","Loader","props","size","color","loading","react_default","a","createElement","ClipLoader_default","css","testPy","generateTest","FORM_STATE","unitTestFunctions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","tests","Symbol","iterator","next","done","q","value","advancedSetting","testType","display","functionName","functionParams","lv1Indent","testCode","split","join","slice","err","return","JSON","stringify","replace","generateHomeworkText","ret","starterCode","questionIndex","i","length","testName","currTest","pointsEnabled","fullScore","description","j","testCases","currCase","skeletonCode","TopNav","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNav","bind","assertThisInitialized","toggleImportPopover","togglePublishPopover","toggleHelp","clickHandler","handlePublishChange","handlePublishClick","state","navIsOpen","importPopoverOpen","publishPopoverOpen","helpOpen","publishName","emptyPublishNameWarning","publishing","publishStatusText","publishFailed","e","setState","target","_this$props","formHandler","apply","arguments","agCode","formState","hwCode","result","_this2","_this3","_this$state","Navbar","className","light","expand","NavbarBrand","id","UncontrolledTooltip","placement","trigger","delay","arrowClassName","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Modal","toggle","ModalHeader","ModalBody","ModalFooter","Button","react_router_dom","to","Input","onChange","placeholder","Spinner","disabled","type","href","height","viewBox","version","width","aria-hidden","fillRule","d","React","PureComponent","FormFunctionName","alertClassName","alertbox","match","class","testIndex","FormGroup","Label","for","spellcheck","data-testid","Component","FormFunctionParams","alert","FormDescription","isValidArgList","args","minNumOfArgs","maxNumOfArgs","functionParamsList","numEqSigns","starPresents","numRegular","param","numArgs","f","count","stack","quoteOpen","c","charAt","pop","push","check","realCount","Boolean","FormTestCases","handleToggle","onExiting","onExited","collapse","numErrors","prevProps","prevState","currNumErrors","document","querySelectorAll","FormTestCases_FormTestCaseInner","testCaseData","testCaseIndex","ListGroup","Badge","pill","FormTestCaseInner","validationResult","alertContent","ListGroupItem","InputGroup","InputGroupAddon","addonType","InputGroupText","data-testcaseid","xmlns","points","FormFullScore","scoreString","isNaN","FormTestType","FormTestName","FormPartialCredits","partialCredits","FormSkeletonCode","spellCheck","FormDisallowedUse","modal","disallowedUse","FormDisallowedUse_DisallowedUseModal","DisallowedUseModal","Table","FormAdvancedSetting","form_test_case_components_FormFullScore","form_test_case_components_FormPartialCredits","form_test_case_components_FormTestType","form_test_case_components_FormTestName","form_test_case_components_FormSkeletonCode","form_test_case_components_FormDisallowedUse","FormTestCase","testData","form_test_case_components_FormFunctionName","form_test_case_components_FormFunctionParams","form_test_case_components_FormDescription","form_test_case_components_FormTestCases","form_test_case_components_FormAdvancedSetting","UnitTestCode","unitTestCode","FormUnitTestCases","FormUnitTestCases_FormTestCaseInner","FormUnitDisplay","FormUnitDisplay_UnitDisplayModal","UnitDisplayModal","FormUnitAdvancedSetting","form_unit_test_components_FormUnitDisplay","FormUnitTestCase","form_unit_test_components_UnitTestCode","form_unit_test_components_FormUnitTestCases","form_unit_test_components_FormUnitAdvancedSetting","InputField","testList","test","containers_FormUnitTestCase","containers_FormTestCase","Form","InputField_FormPointsEnabled","InputField_FormStarterCode","FormPointsEnabled","data-content","checked","htmlFor","FormStarterCode","HomeworkPreview","text","react_highlight_default","TestSummaryQuestion","testCasesList","style","backgroundColor","TestSummary","questionList","output_components_TestSummaryQuestion","sum","parseInt","totalPoints","OutputField","activeTab","tab","tabs","classnames","active","TabContent","TabPane","tabId","Row","Col","sm","output_components_HomeworkPreview","output_components_TestSummary","createUnitTestTest","t","map","x","HomeworkEditor","handleInputChange","localFormState","window","localStorage","getItem","parse","newFormState","filename","file","Blob","navigator","msSaveOrOpenBlob","createObjectURL","download","appendChild","click","setTimeout","removeChild","revokeObjectURL","Date","toLocaleString","inputElement","getElementById","reader","FileReader","onload","event","files","readAsText","zip","JSZip","folder","generateAsync","content","FileSaver","saveAs","dataset","testid","splice","testcaseid","stopPropagation","temp","preventDefault","console","log","setItem","src_containers_TopNav","react_split_es","sizes","minSize","containers_InputField","containers_OutputField","HomeworkEntry","author","time","onOpenSubmitModal","getSkeleton","res","blob","msSaveBlob","elem","save","SubmitModal","onSubmit","handleSubmit","SubmitStatus","statusObj","_useState","useState","_useState2","slicedToArray","resultModalOpen","setResultModalOpen","modalClassName","colSpan","submit-status-td-div-green","submit-status-td-div-yellow","submit-status-td-div-red","msg","SubmitSolution","currPage","setCurrPage","_useState3","_useState4","setContent","_useState5","dateDescending","_useState7","_useState8","perPage","setPerPage","_useState9","_useState10","setHomeworkId","_useState11","_useState12","totalPages","setTotalPages","_useState13","_useState14","submitModalHomeworkId","setSubmitModalHomeworkId","_useState15","_useState16","submitModalHomeworkName","setSubmitModalHomeworkName","_useState17","_useState18","submitModalOpen","setSubmitModalOpen","_useState19","_useState20","homeworkIdToPost","setHomeworkIdToPost","_useState21","_useState22","submitted","setSubmitted","_useState23","_useState24","showLoadingOverlay","setShowLoadingOverlay","_useState25","_useState26","overlayText","setOverlayText","_useState27","_useState28","overlaySpinner","setOverlaySpinner","updateList","trim","total","convertedContent","hw","moment","local","format","useEffect","handleOpenSubmitModal","SubmitSolution_SubmitModal","solutionString","homework","objectSpread","defineProperty","LoadingOverlay_default","fadeSpeed","spinner","SubmitSolution_HomeworkEntry","hasOwnProperty","containers_SubmitSolution_SubmitStatus","createContentList","Pagination_default","activePage","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","newPageNumber","innerClass","itemClass","linkClass","location","hostname","ReactDOM","render","baseName","react_router","path","src_containers_SubmitSolution","src_HomeworkEditor","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c534d89.chunk.js","sourcesContent":["/* eslint-disable no-throw-literal */\nconst axios = require('axios').default;\n\nconst URL = {\n  uploadAutograder:\n    'https://bdi091mwm2.execute-api.us-west-1.amazonaws.com/prod/uploadAutograder',\n  uploadSolution:\n    'https://bdi091mwm2.execute-api.us-west-1.amazonaws.com/prod/uploadSolution',\n  listHomeworks: 'https://bdi091mwm2.execute-api.us-west-1.amazonaws.com/prod/listHomeworks',\n  getSkeleton: 'https://bdi091mwm2.execute-api.us-west-1.amazonaws.com/prod/getSkeleton',\n\n};\n\nexport const uploadAutograder = (name, body) => new Promise((resolve, reject) => {\n  axios({\n    method: 'post',\n    url: URL.uploadAutograder,\n    params: {\n      name,\n    },\n    data: body,\n  }).then((response) => resolve(response.data.data.homeworkId)).catch((error) => {\n    if (error.response) {\n      reject(`${error.response.status}: ${error.response.data.error}`);\n    } else {\n      reject(error.message);\n    }\n  });\n});\n\nexport const listHomeworks = (data) => new Promise((resolve, reject) => {\n  let {\n    homeworkId, perPage, currPage, dateDescending,\n  } = data;\n  homeworkId = homeworkId.trim();\n  axios({\n    method: 'post',\n    url: URL.listHomeworks,\n    params: {\n      homeworkId,\n      perPage,\n      currPage,\n      dateDescending,\n    },\n  }).then((response) => resolve(response.data)).catch((error) => {\n    if (error.response) {\n      reject(`${error.response.status}: ${error.response.error}`);\n    } else {\n      reject(error.message);\n    }\n  });\n});\n\nexport const uploadSolution = (homeworkId, homework) => new Promise((resolve, reject) => {\n  axios({\n    method: 'post',\n    url: URL.uploadSolution,\n    params: {\n      homeworkId,\n    },\n    data: homework,\n  }).then((response) => resolve(response.data.data.result)).catch((error) => {\n    if (error.response) {\n      reject(`${error.response.status}: ${error.response.data.error}`);\n    } else {\n      reject(error.message);\n    }\n  });\n});\n\nexport const getSkeleton = (homeworkId) => new Promise((resolve, reject) => {\n  axios({\n    method: 'post',\n    url: URL.getSkeleton,\n    params: {\n      homeworkId,\n    },\n  }).then((response) => resolve(response.data.data.skeletonCode)).catch((error) => {\n    if (error.response) {\n      reject(`${error.response.status}: ${error.response.data.error}`);\n    } else {\n      reject(error.message);\n    }\n  });\n});\n","import React from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nfunction Loader(props) {\n  const { size, color, loading } = props;\n  return (\n    <div>\n      <ClipLoader css=\"\" size={size} color={color} loading={loading} />\n    </div>\n  );\n}\n\nexport default Loader;\n","// Below string is generated with\n// $ python3\n// >>> open('autograder_script/test.py').read().__str__()\nconst testPy = '#Below commented code will be inserted to the final autograder file by JavaScript\\n#d = eval(autoAG.json)\\n#def unit_f_name_test(): # in case of unit tests.\\n#  ...\\nfrom ast import parse, NodeVisitor, Name\\nimport traceback\\n_NAMES = {\\n    \\'Add\\': \\'+\\',\\n    \\'And\\': \\'and\\',\\n    \\'Assert\\': \\'assert\\',\\n    \\'Assign\\': \\'=\\',\\n    \\'AugAssign\\': \\'op=\\',\\n    \\'BitAnd\\': \\'&\\',\\n    \\'BitOr\\': \\'|\\',\\n    \\'BitXor\\': \\'^\\',\\n    \\'Break\\': \\'break\\',\\n    \\'Recursion\\': \\'recursive call\\',\\n    \\'ClassDef\\': \\'class\\',\\n    \\'Continue\\': \\'continue\\',\\n    \\'Del\\': \\'del\\',\\n    \\'Delete\\': \\'delete\\',\\n    \\'Dict\\': \\'{...}\\',\\n    \\'DictComp\\': \\'{...}\\',\\n    \\'Div\\': \\'/\\',\\n    \\'Ellipsis\\': \\'...\\',\\n    \\'Eq\\': \\'==\\',\\n    \\'ExceptHandler\\': \\'except\\',\\n    \\'ExtSlice\\': \\'[::]\\',\\n    \\'FloorDiv\\': \\'//\\',\\n    \\'For\\': \\'for\\',\\n    \\'FunctionDef\\': \\'def\\',\\n    \\'GeneratorExp\\': \\'(... for ...)\\',\\n    \\'Global\\': \\'global\\',\\n    \\'Gt\\': \\'>\\',\\n    \\'GtE\\': \\'>=\\',\\n    \\'If\\': \\'if\\',\\n    \\'IfExp\\': \\'...if...else...\\',\\n    \\'Import\\': \\'import\\',\\n    \\'ImportFrom\\': \\'from ... import ...\\',\\n    \\'In\\': \\'in\\',\\n    \\'Index\\': \\'...[...]\\',\\n    \\'Invert\\': \\'~\\',\\n    \\'Is\\': \\'is\\',\\n    \\'IsNot\\': \\'is not \\',\\n    \\'LShift\\': \\'<<\\',\\n    \\'Lambda\\': \\'lambda\\',\\n    \\'List\\': \\'[...]\\',\\n    \\'ListComp\\': \\'[...for...]\\',\\n    \\'Lt\\': \\'<\\',\\n    \\'LtE\\': \\'<=\\',\\n    \\'Mod\\': \\'%\\',\\n    \\'Mult\\': \\'*\\',\\n    \\'Nonlocal\\': \\'nonlocal\\',\\n    \\'Not\\': \\'not\\',\\n    \\'NotEq\\': \\'!=\\',\\n    \\'NotIn\\': \\'not in\\',\\n    \\'Or\\': \\'or\\',\\n    \\'Pass\\': \\'pass\\',\\n    \\'Pow\\': \\'**\\',\\n    \\'RShift\\': \\'>>\\',\\n    \\'Raise\\': \\'raise\\',\\n    \\'Return\\': \\'return\\',\\n    \\'Set\\': \\'{ ... } (set)\\',\\n    \\'SetComp\\': \\'{ ... for ... } (set)\\',\\n    \\'Slice\\': \\'[ : ]\\',\\n    \\'Starred\\': \\'\\',\\n    \\'Sub\\': \\'-\\',\\n    \\'Subscript\\': \\'[]\\',\\n    \\'Try\\': \\'try\\',\\n    \\'Tuple\\': \\'(... , ... )\\',\\n    \\'UAdd\\': \\'+\\',\\n    \\'USub\\': \\'-\\',\\n    \\'While\\': \\'while\\',\\n    \\'With\\': \\'with\\',\\n    \\'Yield\\': \\'yield\\',\\n    \\'YieldFrom\\': \\'yield from\\',\\n}\\ndef check(source_file, checked_funcs, disallow, source=None):\\n    \"\"\"Checks that AST nodes whose type names are present in DISALLOW\\n    (an object supporting \\'in\\') are not present in the function(s) named\\n    CHECKED_FUNCS in SOURCE.  By default, SOURCE is the contents of the\\n    file SOURCE_FILE.  CHECKED_FUNCS is either a string (indicating a single\\n    name) or an object of some other type that supports \\'in\\'. CHECKED_FUNCS\\n    may contain __main__ to indicate an entire  module. Prints reports of\\n    each prohibited node and returns True iff none are found.\\n    See ast.__dir__() for AST type names.  The special node name \\'Recursion\\'\\n    checks for overtly recursive calls (i.e., calls of the form NAME(...) where\\n    NAME is an enclosing def.\"\"\"\\n    return ExclusionChecker(disallow).check(source_file, checked_funcs, source)\\nclass ExclusionChecker(NodeVisitor):\\n    \"\"\"An AST visitor that checks that certain constructs are excluded from\\n    parts of a program.  ExclusionChecker(EXC) checks that AST node types\\n    whose names are in the sequence or set EXC are not present.  Its check\\n    method visits nodes in a given function of a source file checking that the\\n    indicated node types are not used.\"\"\"\\n\\n    def __init__(self, disallow=()):\\n        \"\"\"DISALLOW is the initial default list of disallowed\\n        node-type names.\"\"\"\\n        self._disallow = set(disallow)\\n        self._checking = False\\n        self._errs = 0\\n\\n    def generic_visit(self, node):\\n        if self._checking and type(node).__name__ in self._disallow:\\n            self._report(node)\\n        super().generic_visit(node)\\n\\n    def visit_Module(self, node):\\n        if \"__main__\" in self._checked_funcs:\\n            self._checking = True\\n            self._checked_name = self._source_file\\n        super().generic_visit(node)\\n\\n    def visit_Call(self, node):\\n        if \\'Recursion\\' in self._disallow and \\\\\\n           type(node.func) is Name and \\\\\\n           node.func.id in self._func_nest:\\n            self._report(node, \"should not be recursive\")\\n        self.generic_visit(node)\\n\\n    def visit_FunctionDef(self, node):\\n        self._func_nest.append(node.name)\\n        if self._checking:\\n            self.generic_visit(node)\\n        elif node.name in self._checked_funcs:\\n            self._checked_name = \"Function \" + node.name\\n            checking0 = self._checking\\n            self._checking = True\\n            super().generic_visit(node)\\n            self._checking = checking0\\n        self._func_nest.pop()\\n\\n    def _report(self, node, msg=None):\\n        node_name = _NAMES.get(type(node).__name__, type(node).__name__)\\n        if msg is None:\\n            msg = \"should not contain \\'{}\\'\".format(node_name)\\n        print(\"{} {}\".format(self._checked_name, msg))\\n        self._errs += 1\\n\\n    def errors(self):\\n        \"\"\"Returns the number of number of prohibited constructs found in\\n        the last call to check.\"\"\"\\n        return self._errs\\n\\n    def check(self, source_file, checked_funcs, disallow=None, source=None):\\n        \"\"\"Checks that AST nodes whose type names are present in DISALLOW\\n        (an object supporting the contains test) are not present in\\n        the function(s) named CHECKED_FUNCS in SOURCE.  By default, SOURCE\\n        is the contents of the file SOURCE_FILE.  DISALLOW defaults to the\\n        argument given to the constructor (and resets that value if it is\\n        present).  CHECKED_FUNCS is either a string (indicating a single\\n        name) or an object of some other type that supports \\'in\\'.\\n        CHECKED_FUNCS may contain __main__ to indicate an entire module.\\n        Prints reports of each prohibited node and returns True iff none\\n        are found.\\n        See ast.__dir__() for AST type names.  The special node name\\n        \\'Recursion\\' checks for overtly recursive calls (i.e., calls of the\\n        form NAME(...) where NAME is an enclosing def.\"\"\"\\n\\n        self._checking = False\\n        self._source_file = source_file\\n        self._func_nest = []\\n        if type(checked_funcs) is str:\\n            self._checked_funcs = { checked_funcs }\\n        else:\\n            self._checked_funcs = set(checked_funcs)\\n        if disallow is not None:\\n            self._disallow = set(disallow)\\n        if source is None:\\n            with open(source_file, \\'r\\', errors=\\'ignore\\') as inp:\\n                source = inp.read()\\n        p = parse(source, source_file)\\n        self._errs = 0\\n\\n        self.visit(p)\\n        return self._errs == 0\\n\\n\\nimport homework\\nimport sys\\nimport io\\nprint(\"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\")\\n\\nclass Test:\\n    def assertEqual(self, a, b):\\n        return a==b\\n\\n    def __init__(self, question):\\n        self.question = question\\n        self.tests_passed = 0\\n        self.test_type = question[\"advancedSetting\"][\"testType\"]\\n\\n    def test(self, suppress=False):\\n        if suppress:\\n            # create a text trap and redirect stdout\\n            text_trap = io.StringIO()\\n            sys.stdout = text_trap\\n        print(\"---------------------------------------------------------------------\\\\n\")\\n        if self.test_type == \"simple\":\\n            print(\"Testing {}:\\\\n\".format(self.question[\\'functionName\\'] if self.question[\\'advancedSetting\\'][\\'testName\\'].strip() == \"\" else self.question[\\'advancedSetting\\'][\\'testName\\']))\\n        elif self.test_type == \"unit_test\":\\n            print(\"Running Unit Test \\'{}\\'\".format(self.question[\\'functionName\\']))\\n\\n        for testCase in self.question[\\'testCases\\']:\\n            if not self.test_one_pair(testCase):\\n                print(\"{} test(s) passed before encountering the first failed case.\".format(self.tests_passed))\\n                print(\"\\\\n---------------------------------------------------------------------\")\\n\\n                sys.stdout = sys.__stdout__\\n                return (False, 0)\\n        if self.test_type == \"simple\":\\n            comma = \",\" if self.question[\\'advancedSetting\\'][\\'disallowedUse\\'] else \"\"\\n            disallowedUse = eval(\"(\" + self.question[\\'advancedSetting\\'][\\'disallowedUse\\'] + comma + \")\")\\n            if disallowedUse:\\n                if (not check(\"homework.py\", self.question[\\'functionName\\'], disallowedUse)):\\n                    print(\"Please revise your code and remove these usages.\")\\n                    print(\"\\\\n---------------------------------------------------------------------\")\\n\\n                    sys.stdout = sys.__stdout__\\n                    return (False, 0)\\n        print(\"All {} cases passed. No cases failed.\".format(len(self.question[\\'testCases\\'])))\\n        print(\"\\\\n---------------------------------------------------------------------\")\\n\\n        sys.stdout = sys.__stdout__\\n        return (True, int(self.question[\"advancedSetting\"][\"fullScore\"]))\\n\\n    def test_one_pair(self, testCase):\\n        if self.test_type == \"simple\":\\n            try:\\n                expected = eval(testCase[1])\\n            except:\\n                print(\"It\\'s not you; it\\s us! \\\\n\" +\\n                    \"There\\'s an error in the test case: cannot evaluate \\'\" + testCase[1] + \"\\'\\\\n\" +\\n                    \"Please contact your teacher. \\\\n\")\\n                return False\\n            funcCallRepr = self.question[\"functionName\"] + \"(\" + testCase[0] + \")\"\\n            try:\\n                answer = eval(\"homework.\" + self.question[\"functionName\"] + \"(\" + testCase[0] + \")\")\\n            except Exception as ex:\\n                print(\"Running {}:\\\\n\".format(funcCallRepr))\\n                print(traceback.format_exc())\\n                print(\"Current test terminated.\\\\n\")\\n                return False\\n\\n            if self.assertEqual(answer, expected):\\n                self.tests_passed += 1\\n                return True\\n            else:\\n                print(\"Running {}:\".format(funcCallRepr))\\n                print(\"Expected: {}\\\\nGot: {}\\\\n\".format(expected.__repr__(), answer.__repr__()))\\n                return False\\n        else:\\n            if self.question[\"advancedSetting\"][\"display\"] == \"show\":\\n                f = \"homework.\" + self.question[\"functionName\"]\\n            else:\\n                f = \"unit_\" + self.question[\"functionName\"]\\n            try:\\n                return eval(f + \"(\"+ testCase + \")\")\\n            except:\\n                print(traceback.format_exc())\\n                print(\"Current test terminated.\\\\n\")\\n                return False\\n\\n\\n# questionNames = [ question[\\'functionName\\'] if question[\\'advancedSetting\\'][\\'testName\\'].strip() == \"\" else question[\\'advancedSetting\\'][\\'testName\\'] for question in d[\"tests\"]]\\nquestionD = {question[\\'functionName\\']\\n    if question[\"advancedSetting\"][\"testType\"] == \"unit_test\" or question[\\'advancedSetting\\'][\\'testName\\'].strip() == \"\"\\n    else question[\\'advancedSetting\\'][\\'testName\\']\\n    :\\n    Test(question)\\n    for question in d[\"tests\"]  #d is the autoAG file content (a dictionary). Open a file to see it\\'s structure\\n    if question[\"advancedSetting\"][\"testType\"] != \"unit\"\\n    }\\nif len(sys.argv) > 1:\\n    assert sys.argv[1] in questionD, \"\\\\nThe command line argument you passed in is not a valid function name; choose from {}\\\\n\".format(list(questionD.keys()).__repr__())\\n    questionD[sys.argv[1]].test()\\nelse:\\n    result = [t.test(suppress=False) for t in questionD.values()]\\n\\n    passed = str(sum([1 for x in result if x[0]]))\\n    score = str(sum([x[1] for x in result]))\\n    print(\"Ran:\", len(result), \"tests\")\\n    print(\"Passed:\", passed)\\n    if d[\"pointsEnabled\"]:\\n        print(\"Total score: \" + score + \"/\" + str(sum([int(t[\"advancedSetting\"][\"fullScore\"]) for t in d[\"tests\"] if t[\"advancedSetting\"][\"testType\"] != \"unit\"])))\\nprint(\"=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\")\\n';\n\nfunction generateTest(FORM_STATE) {\n  let unitTestFunctions = '';\n  const TAB = '    ';\n  for (const q of FORM_STATE.tests) {\n    if (q.advancedSetting.testType === 'unit_test'\n          && q.advancedSetting.display === 'hide') {\n      unitTestFunctions += `def unit_${q.functionName\n      }(${q.functionParams}):\\n`;\n      let lv1Indent = TAB;\n      lv1Indent += q.testCode;\n      lv1Indent += '\\n\\n';\n      unitTestFunctions += lv1Indent.split('\\n').join(`\\n${TAB}`);\n      unitTestFunctions = unitTestFunctions.slice(0, -1);\n    }\n  }\n  return `#!/usr/bin/env python3\\n${unitTestFunctions}\\ntrue = True \\nfalse = False\\n`\n    + `d = eval(\"${\n      JSON.stringify(FORM_STATE).replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\").replace(/\"/g, '\\\\\"')\n    }\")\\n${testPy}`;\n}\n\nexport { generateTest };\n","function generateHomeworkText(FORM_STATE) {\n  // return `from math import * \\n#this \\ndef a(a,b):\\n    return \"shit\"`;\n  const TAB = \"    \";\n\n  var ret = \"\";\n  ret += FORM_STATE.starterCode;\n  if (ret !== \"\") {\n    ret += '\\n\\n';\n  }\n  var questionIndex = -1;\n  for (var i = 0; i < FORM_STATE.tests.length; i++) {\n    var currTest = FORM_STATE.tests[i];\n    var testType = currTest.advancedSetting.testType;\n    if (testType !== \"unit_test\") {\n      questionIndex++;\n    }\n    var testName;\n    if (testType === \"simple\" || testType === \"unit\") {\n      ret += \"# Q\" + (questionIndex + 1) + \": \";\n      testName =\n      currTest.advancedSetting.testName.replace(/\\s/g, '') !== \"\" ?\n      currTest.advancedSetting.testName.replace(/\\s/g, '')\n      :\n      currTest.functionName;\n      ret += testName;\n      ret += \"\\n\";\n    } else {\n      testName = currTest.functionName;\n      if (currTest.advancedSetting.display !== \"hide\") {\n        ret += \"##### PLEASE DO NOT MODIFY THIS FUNCTION #####\\n\"\n      }\n      ret += \"# Unit Test: \" + testName + \"\\n\";\n    }\n    if (testType === \"simple\" || testType === \"unit_test\") {\n      if (FORM_STATE.pointsEnabled) {\n        ret += \"# Full score: \" + currTest.advancedSetting.fullScore;\n        ret += \"\\n\";\n      }\n      ret += \"# Type `python3 test \" + testName + \"` in terminal\\n\";\n      ret += testType === \"unit_test\" ?\n              \"#    to run this test. \\n\"\n              :\n              \"#    to run tests on this question. \\n\";\n    }\n    if (testType === \"simple\" ||\n          testType === \"unit\" ||\n          currTest.advancedSetting.display === \"show\") {\n      // body\n      ret += \"def \" + currTest.functionName +\n        \"(\" + currTest.functionParams + \"):\\n\";\n\n      var lv1Indent = TAB;\n      lv1Indent += \"'''\";\n      lv1Indent += currTest.description;\n      lv1Indent += \"\\n\";\n\n      if (testType === \"simple\") {\n        const MAX = 4;\n        lv1Indent += \"\\n\";\n        for (var j = 0; j < currTest.testCases.length; j++) {\n          if (j < MAX) {\n            var currCase = currTest.testCases[j];\n            // console.log(j);\n            // console.log(currTest.testCases.length);\n            lv1Indent += \">>> \" + currTest.functionName + \"(\" + currCase[0] + \")\\n\";\n            lv1Indent += currCase[1] + \"\\n\";\n          }\n        }\n      }\n      lv1Indent += \"'''\";\n      lv1Indent += \"\\n\";\n      if (testType === \"unit\" || testType === \"simple\") {\n        lv1Indent += currTest.advancedSetting.skeletonCode;\n      } else if (testType === \"unit_test\"){\n        lv1Indent += currTest.testCode;\n      }\n      lv1Indent += \"\\n\\n\"\n\n      ret += lv1Indent.split(\"\\n\").join(\"\\n\" + TAB);\n      ret = ret.slice(0, -1);\n    } else if (currTest.advancedSetting.display === \"hide\") {\n      ret += \"# Test body hidden. \\n\\n\"\n    }\n    ret += '\\n';\n\n  }\n  return ret;\n}\n\nexport {generateHomeworkText};\n","import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  UncontrolledTooltip,\n  Input,\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  Button,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport { uploadAutograder, uploadSolution } from 'services/';\nimport Spinner from 'components/Spinner';\nimport { generateTest } from 'containers/generateTest';\nimport { generateHomeworkText } from 'containers/generateHomeworkText';\n\nimport './index.css';\nimport { Link } from 'react-router-dom';\n\n// import githubMark from '../GitHub-Mark-64px.png'\n\n// props : {formHandler: Function}\nclass TopNav extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.toggleNav = this.toggleNav.bind(this);\n    this.toggleImportPopover = this.toggleImportPopover.bind(this);\n    this.togglePublishPopover = this.togglePublishPopover.bind(this);\n\n    this.toggleHelp = this.toggleHelp.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n    this.handlePublishChange = this.handlePublishChange.bind(this);\n    this.handlePublishClick = this.handlePublishClick.bind(this);\n    this.state = {\n      navIsOpen: false,\n      importPopoverOpen: false,\n      publishPopoverOpen: false,\n      helpOpen: false,\n      publishName: '',\n      emptyPublishNameWarning: ' ',\n      publishing: false,\n      publishStatusText: '',\n      publishFailed: false,\n    };\n  }\n\n  handlePublishChange(e) {\n    this.setState({\n      publishName: e.target.value,\n    });\n  }\n\n  toggleNav() {\n    this.setState({\n      navIsOpen: !this.state.navIsOpen,\n    });\n  }\n\n  toggleImportPopover() {\n    this.setState({\n      importPopoverOpen: !this.state.importPopoverOpen,\n    });\n  }\n\n  togglePublishPopover() {\n    this.setState({\n      publishPopoverOpen: !this.state.publishPopoverOpen,\n      emptyPublishNameWarning: ' ',\n    });\n  }\n\n  toggleHelp() {\n    this.setState({\n      helpOpen: !this.state.helpOpen,\n    });\n  }\n\n  clickHandler(...args) {\n    this.props.formHandler(...args);\n    this.setState({\n      helpOpen: false,\n    });\n  }\n\n  async handlePublishClick() {\n    this.setState({ publishStatusText: '' });\n    const { publishName } = this.state;\n    if (publishName == false) {\n      this.setState({\n        emptyPublishNameWarning: 'Please enter a valid homework name',\n      });\n    } else {\n      this.setState({\n        emptyPublishNameWarning: ' ',\n        publishing: true,\n      });\n      uploadAutograder(\n        this.state.publishName,\n        {\n          agCode: generateTest(this.props.formState),\n          hwCode: generateHomeworkText(this.props.formState),\n        },\n      ).then((result) => {\n        this.setState({\n          publishName: '',\n          publishing: false,\n          publishFailed: false,\n          publishStatusText: `Your homework has been deployed. ID:\\n${result}`,\n        });\n      }).catch((e) => {\n        this.setState({\n          publishing: false,\n          publishFailed: true,\n          publishStatusText:\n            e,\n        });\n      });\n    }\n  }\n\n\n  render() {\n    const {\n      publishing, publishStatusText, publishFailed, publishName, publishPopoverOpen,\n    } = this.state;\n    return (\n      <Navbar className=\"topNav\" color=\"light\" light expand=\"sm\">\n        <NavbarBrand className=\"autoAGBrand\" id=\"editorAutoAGBrand\">autoAG</NavbarBrand>\n        <UncontrolledTooltip\n          placement=\"right\"\n          trigger=\"hover\"\n          target=\"editorAutoAGBrand\"\n          delay=\"{show:0, hide:0}\"\n          arrowClassName=\"CalTooltipArrow\"\n          className=\"CalTooltip\"\n        >\n        Much Love For Cal!\n        </UncontrolledTooltip>\n\n        <span id=\"navbarPython\">Python</span>\n        <UncontrolledTooltip\n          placement=\"bottom\"\n          trigger=\"hover\"\n          target=\"navbarPython\"\n        >\n        Currently only available in Python. More languange support coming\n        soon.\n        </UncontrolledTooltip>\n\n        <NavbarToggler onClick={this.toggleNav} />\n        <Collapse isOpen={this.state.navIsOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink onClick={this.toggleHelp}>Help and Usage</NavLink>\n            </NavItem>\n            <Modal\n              isOpen={this.state.helpOpen}\n              toggle={this.toggleHelp}\n              className=\"modal-lg\"\n            >\n              <ModalHeader toggle={this.toggleHelp}>\n              Welcome to Jingkang Zhang's auto-auto-grader!\n              </ModalHeader>\n              <ModalBody>\n                <p>\n                This educational project was developed while I was teaching\n                Python classes online. It's meant to make composing coding\n                homework easy and fun for educators!\n                </p>\n                <h3>Overview</h3>\n                <p>\n                There are two types of tests you can created with autoAG:\n                simple and unit. Simple questions are ones that ask students\n                to write a pure function, i.e., the function is tested solely\n                basing on input-output matchings. This should satisfy needs\n                for most problems. When you click on \"Add Question\" button,\n                the added question is \"simple\" by default. In this case, you\n                specify the function signatures (name, parameters, skeleton\n                code, etc) and tests in the same block.\n                </p>\n                <p>\n                When writing a unit test, on the other hand, the question is\n                separate from the tests. To make a question \"unit\", click on\n                \"Advanced Settings - Test Type - unit test\". As you'll notice,\n                this changes the current block, and adds a new test block\n                (yellow). You may also add a unit test block using the yellow\n                \"Add Unit Test\" button. The yellow test block is a unit test.\n                It's not a question for students; it's a function for you to\n                specify tests. Your unit test function, later, will be called\n                  on the arguments you put in the test cases. Returning\n                  {' '}\n                  <code>True</code>\n                  {' '}\nmakes the current test \"PASS\", while\n                  {' '}\n                  <code>False</code>\n                  {' '}\nwill be \"FAIL\". This way, you have full\n                control over the unit tests. Print error logs along the way as\n                a courtesy to your students. Instead of returning False, you\n                may also throw an error; autoAG will catch it. Thus, it's\n                sometimes convenient to just write assert statements.\n                </p>\n                <p>\n                When finished, click on export on the navbar. A zip file will\n                be downloaded. Unzipped, the folder contains 2 files:\n                homework.py and test. As the students are progressing through\n                  homework.py, they may type\n                  {' '}\n                  <code>python3 test question_name</code>\n                  {' '}\nin terminal to run\n                  tests on the current question, or\n                  {' '}\n                  <code>python3 test</code>\n                  {' '}\nto\n                  run tests on all questions.\n                  {' '}\n                </p>\n                <p>\n                Save your sessions often, so that you can import them back.\n                </p>\n                <h3>Examples</h3>\n                <ul>\n                  <li>\n                  Simple Questions\n                    {' '}\n                    <button\n                      className=\"helpAddButton\"\n                      name=\"helpAddSimpleQuestions\"\n                      onClick={this.clickHandler}\n                    >\n                    add\n                    </button>\n                  </li>\n                  <li>\n                  Disallowed Uses\n                    {' '}\n                    <button\n                      className=\"helpAddButton\"\n                      name=\"helpAddDisallowedUses\"\n                      onClick={this.clickHandler}\n                    >\n                    add\n                    </button>\n                  </li>\n                  <li>\n                  Unit Tests\n                    {' '}\n                    <button\n                      className=\"helpAddButton\"\n                      name=\"helpAddUnitTests\"\n                      onClick={this.clickHandler}\n                    >\n                    add\n                    </button>\n                  </li>\n                </ul>\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={this.toggleHelp}>\n                Close\n                </Button>\n              </ModalFooter>\n            </Modal>\n\n            <NavItem>\n              <NavLink onClick={this.togglePublishPopover}>Publish</NavLink>\n            </NavItem>\n\n            <Modal\n              isOpen={publishPopoverOpen}\n              toggle={this.togglePublishPopover}\n            >\n              <ModalHeader toggle={this.togglePublishPopover}>\n                <div>Publish Homework to Server (beta)</div>\n                <div className=\"disclaimer\">\n                This experimental feature allows you to publish the autograder\n                to our server. Please do not include any sensitive\n                information.\n                </div>\n                <div><Link className=\"topnav-link\" to=\"/submit\" target=\"_blank\">submit to a published homework</Link></div>\n              </ModalHeader>\n              <ModalBody>\n                <div\n                  className={\n                  publishFailed\n                    ? 'publishStatusTextRed'\n                    : 'publishStatusTextGreen'\n                }\n                >\n                  {publishStatusText}\n                </div>\n                {publishStatusText ? <hr /> : ''}\n                <div className=\"homeworkName\">Homework Name:</div>\n                <Input\n                  value={publishName}\n                  onChange={this.handlePublishChange}\n                  placeholder=\"MyHomework\"\n                  id=\"publishName\"\n                />\n                <div className=\"publishNameWarning\">\n                  {this.state.emptyPublishNameWarning}\n                </div>\n              </ModalBody>\n              <ModalFooter>\n                <Spinner\n                  color=\"#0275D8\"\n                  size=\"25px\"\n                  loading={publishing}\n                />\n                <Button\n                  color=\"primary\"\n                  name=\"Publish\"\n                  onClick={this.handlePublishClick}\n                  disabled={publishing}\n                >\n                Publish\n                </Button>\n              </ModalFooter>\n            </Modal>\n\n            <NavItem>\n              <NavLink onClick={this.toggleImportPopover}>Import</NavLink>\n            </NavItem>\n\n            <Modal\n              isOpen={this.state.importPopoverOpen}\n              toggle={this.toggleImportPopover}\n            >\n              <ModalHeader toggle={this.toggleImportPopover}>\n              Select .autoag file to import\n              </ModalHeader>\n              <ModalBody>\n                <Input type=\"file\" name=\"file\" id=\"importFile\" />\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"secondary\" onClick={this.toggleImportPopover}>\n                Cancel\n                </Button>\n                {' '}\n                <Button\n                  color=\"primary\"\n                  name=\"import\"\n                  onClick={(e) => {\n                    this.toggleImportPopover();\n                    this.props.formHandler(e);\n                  }}\n                >\n                  Import\n                </Button>\n              </ModalFooter>\n            </Modal>\n\n            <NavItem>\n              <NavLink name=\"save\" onClick={this.props.formHandler}>\n                Save Session\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink name=\"export\" onClick={this.props.formHandler}>\n                Export\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                className=\"githubNav\"\n                target=\"_blank\"\n                href=\"https://github.com/JingkangZhang/autoAG\"\n              >\n                <svg\n                  height=\"24\"\n                  className=\"octicon octicon-mark-github\"\n                  viewBox=\"0 0 16 16\"\n                  version=\"1.1\"\n                  width=\"32\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n                  />\n                </svg>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default TopNav;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int, functionName:String, placeholder:String}\nclass FormFunctionName extends React.Component {\n  render() {\n    var functionName = this.props.functionName;\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    if (!functionName.match(/^[a-zA-Z_][a-zA-Z0-9_]*$/)) {\n      alertbox =\n        <span class=\"labelAlert\" id={\"functionNameAlert\"+ this.props.testIndex}>\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"functionNameAlert\"+ this.props.testIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            Please enter a valid Python function name.\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertBorder\";\n    }\n    return (\n      <FormGroup>\n        <div className={alertClassName}>\n          <Label for=\"functionName\" >\n            <span>Function Name:</span>\n            {alertbox}\n          </Label>\n          <Input type=\"text\" name=\"functionName\" spellcheck=\"false\"\n            className=\"forPlaceHolder codeInput\"\n            placeholder={this.props.placeholder}\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={functionName} />\n        </div>\n      </FormGroup>\n    )\n  }\n}\nexport default FormFunctionName;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int,\n//      functionName:String, functionParams:String,\n//      placeholder:String}\nclass FormFunctionParams extends React.Component {\n  render() {\n    var functionName = this.props.functionName;\n    var functionParams = this.props.functionParams;\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    if (!functionParams.match(\n        /^\\s*((\\*)?(\\*)?[a-zA-Z_][a-zA-Z0-9_]*(\\s*\\=\\s*[^ ]+?)?\\s*,\\s*)*((\\*)?(\\*)?[a-zA-Z_][a-zA-Z0-9_]*(\\s*\\=\\s*[^ ]+?)?\\s*,?\\s*)?$/)) {\n      alertbox =\n        <span class=\"labelAlert\" id={\"functionNameAlert\" + this.props.testIndex}>\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"functionNameAlert\" + this.props.testIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            Please enter a valid Python function parameter list.<br /> e.g., \"arg1, arg2=None, *args, **kwargs\".\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertBorder\";\n    }\n    return (\n      <FormGroup>\n        <div className={alertClassName}>\n          {alert}\n          <Label for=\"functionParams\">\n            <span>Function Parameters:</span>\n            {alertbox}\n          </Label>\n          <Input type=\"text\" name=\"functionParams\" spellcheck=\"false\"\n            // onFocus={e => e.target.select()}\n            className=\"forPlaceHolder codeInput\"\n            placeholder={this.props.placeholder}\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={functionParams} />\n        </div>\n      </FormGroup>\n    )\n  }\n}\nexport default FormFunctionParams;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int, description:String, placeholder: String}\nclass FormDescription extends React.Component {\n  render() {\n    return (\n      <FormGroup>\n          <Label for=\"exampleText\">\n            {this.props.type == \"simple\" ?\n              \"Question Description:\"\n              :\n              \"Test Description:\"\n            }\n          </Label>\n          <Input type=\"textarea\" name=\"formDescription\" spellcheck=\"false\"\n          id=\"formDescription\"\n          onChange={this.props.formHandler}\n          className=\"forPlaceHolder codeInput\"\n          data-testid={this.props.testIndex}\n          placeholder={this.props.placeholder}\n          value={this.props.description} />\n        </FormGroup>\n    )\n  }\n}\nexport default FormDescription;\n","function isValidArgList(functionParams, args) {\n  var minNumOfArgs;\n  var maxNumOfArgs;\n  functionParams = functionParams.replace(/,\\s*$/,\"\");  //remove trailing comma\n  var functionParamsList = functionParams.split(/,/);\n  var numEqSigns = 0;\n  var starPresents = false;\n  var numRegular = 0;\n  for (var param of functionParamsList) {\n    param = param.replace(/^\\s*/, \"\");\n    param = param.replace(/\\s*$/, \"\");\n    if (param.match(/=/)) {\n      numEqSigns += 1;\n    } else if (param.match(/\\*/)) {\n      starPresents = true;\n      // console.log(param);\n    } else {\n      numRegular += 1;\n    }\n  }\n  // console.log(\"numEqSigns : \",numEqSigns, \"numRegular : \",numRegular,  \"starPresents : \", starPresents);\n  if (functionParams.match(/^\\s*$/)) {\n    maxNumOfArgs = 0;\n    minNumOfArgs = 0;\n    numRegular = 0;\n  } else {\n    minNumOfArgs = numRegular;\n    // console.log(\"here\", starPresents);\n    maxNumOfArgs = starPresents ? 666666 : numEqSigns + numRegular;\n  }\n  // Original Regex is as follows ({2,3} to be replaced by minNumOfArgs-1 and maxNumOfArgs-1)\n  // /^(\\s*(?:'[^']*?'|\"[^\"]*?\"|\\[[^\\]]*?\\]|\\([^)]*?\\)|[^,]+\\([^)]*?\\)|[^,]+),\\s*){1,2}(\\s*(?:'[^']*?'|\"[^\"]*?\"|\\[[^\\]]*?\\]|\\([^)]*?\\)|[^,]+\\([^)]*?\\)|[^, ][^,]*),?\\s*)$/\n  // var reLeft = \"^(\\\\s*(?:'[^']*?'|\\\"[^\\\"]*?\\\"|\\\\[[^\\\\]]*?\\\\]|\\\\([^)]*?\\\\)|[^,]+\\\\([^)]*?\\\\)|[^,]+),\\\\s*)\";\n  // var reRight = \"(\\\\s*(?:'[^']*?'|\\\"[^\\\"]*?\\\"|\\\\[[^\\\\]]*?\\\\]|\\\\([^)]*?\\\\)|[^,]+\\\\([^)]*?\\\\)|[^, ][^,]*),?\\\\s*)$\";\n  // var reMiddle = \"{\" + (minNumOfArgs - 1) + \",\" + (maxNumOfArgs === \"\" ? \"\" : maxNumOfArgs - 1) + \"}\"\n  // console.log(reLeft + reMiddle + reRight);\n  // var re = RegExp(reLeft + reMiddle + reRight,\"g\");\n  // var result = functionParams.match(/^\\s*$/) ?\n  //     args.match(/^\\s*$/) : args.match(re);\n  var numArgs = check(args); //{count:Int, error:Bool} count is never 0, because it's used to indicate the number of argument the user is typing\n  // console.log(minNumOfArgs);\n  var realCount = args.match(/^\\s*$/) ? 0 : numArgs.count;\n  var result =\n    (realCount >= minNumOfArgs\n      && realCount <= maxNumOfArgs && !numArgs.error);\n\n  // console.log({result: Boolean(result),\n  //   numRegular: numRegular,\n  //   numEqSigns: numEqSigns,\n  //   starPresents:starPresents,\n  //   error:numArgs.error,\n  //   count:numArgs.count\n  //   });\n  return {result: Boolean(result),\n    numRegular: numRegular,\n    numEqSigns: numEqSigns,\n    starPresents:starPresents,\n    error:numArgs.error,\n    count:numArgs.count,\n    realCount:realCount\n    };\n}\n\nfunction check(f) {\n  f = f.replace(/^\\s*,/, \"\");\n  f = f.replace(/,\\s*$/, \"\");\n  var count = 1;\n  var symbols = [\"(\", \"[\", \"'\", '\"'];\n  var stack = [];\n  var quoteOpen = false;\n  for (var i = 0; i < f.length; i++) {\n    var c = f.charAt(i);\n    if (c===\"'\" || c==='\"') {\n      if (stack.length !== 0 && stack[stack.length-1] === c) {\n        stack.pop();\n        quoteOpen = false;\n      } else if (stack[stack.length-1] !== \"'\" && stack[stack.length-1] !== '\"') {\n        stack.push(c);\n        quoteOpen = true;\n      }\n    } else if (!quoteOpen) {\n      if (c === \",\" && stack.length === 0) {\n        count += 1;\n      } else if (c === \"(\" || c === \"[\" || c === \"{\") {\n        stack.push(c);\n      } else if (c === \")\") {\n        if (stack.length !== 0 && stack[stack.length-1]===\"(\") {\n          stack.pop();\n        } else {\n          return {count:count, error:true};\n        }\n      } else if (c === \"]\") {\n          if (stack.length !== 0 && stack[stack.length-1]===\"[\") {\n            // console.log(\"before splice\");\n            // console.log(stack);\n            stack.pop();\n            // console.log(\"spliced, stack now:\");\n            // console.log(stack);\n          } else {\n            // console.log(\"error here\");\n            return {count:count, error:true};\n          }\n      } else if (c === \"}\") {\n          if (stack.length !== 0 && stack[stack.length-1]===\"{\") {\n            stack.pop();\n          } else {\n            return {count:count, error:true};\n          }\n      }\n    }\n  }\n  if (stack.length !== 0) {\n    // console.log(\"ended, returning error here\");\n    // console.log(stack);\n    return {count:count, error:true};\n  }\n  return {count:count, error:false};\n}\n\nexport {isValidArgList};\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\nimport {isValidArgList} from \"../testArgs.js\";\n//props:{formHandler:Function, testIndex:Int, functionName:String,\n//        functionParams:String, testCases:[[\"\", \"\"],[\"\", \"\"]]}\nclass FormTestCases extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.state = {\n      collapse: false,\n      numErrors: 0,\n      status: 'Opened'\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  onExiting() {\n   this.setState({ status: 'Closing...' });\n  }\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    var currNumErrors =\n      document.querySelectorAll(\n        \"#\" + \"formTestCase\"+ this.props.testIndex + ' .alertTestCaseBorder').length;\n\n    if (prevState.numErrors !== currNumErrors) {\n      this.setState({numErrors: currNumErrors});\n    }\n  }\n  render() {\n    var testCases = [];\n    for (var i = 0; i < this.props.testCases.length; i++) {\n      testCases.push(\n        <FormTestCaseInner testCaseData={this.props.testCases[i]}\n          testCaseIndex={i}\n          testIndex={this.props.testIndex}\n          functionName={this.props.functionName}\n          functionParams={this.props.functionParams}\n          formHandler={this.props.formHandler}/>\n      )\n    }\n    return (\n      <ListGroup>\n        <Button className=\"testCaseHeader\"\n              color=\"dark\"\n              onClick={this.handleToggle}>\n          Test Cases\n          {this.state.numErrors !== 0 && this.state.collapse && this.state.status === 'Closed'?\n            <Badge className=\"numErrorBadge\" color=\"danger\" pill>{this.state.numErrors}</Badge>\n            :\n            \"\"\n          }\n        </Button>\n        <Collapse  isOpen={!this.state.collapse}\n          onExiting={this.onExiting}\n          onExited={this.onExited}>\n          <div class=\"testCasesGroup\">\n            {testCases}\n            <Button name=\"addTestCase\"\n              className=\"addTestCaseButton\"\n              data-testid={this.props.testIndex}\n              onClick={this.props.formHandler}\n              color=\"secondary\"\n              size=\"sm\">Add Test Case</Button>\n            <div class=\"testCaseBottomBorder\"></div>\n          </div>\n        </Collapse>\n      </ListGroup>\n    )\n  }\n}\n//props:{testCaseData:[\"\",\"\"], testIndex:Int, testCaseIndex:Int, functionName:scoreString,\n//        functionParams:String, formHandler:Function}\nclass FormTestCaseInner extends React.Component {\n  render() {\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    var validationResult = isValidArgList(this.props.functionParams,\n      this.props.testCaseData[0]);\n    if (!validationResult.result) {\n      var alertContent=\"\";\n      if (validationResult.error) {\n        alertContent = \"You have an unmatched symbol error in your No.\"+\n          validationResult.count + \" argument.\";\n      } else {\n        if (validationResult.starPresents === true) {\n          alertContent = \"You are supposed to pass in at least \" +\n            validationResult.numRegular +\" arguments. Found \" +\n            validationResult.realCount + \".\";\n        } else {\n          if (validationResult.numEqSigns === 0) {\n            alertContent = \"You are supposed to pass in \" +\n            validationResult.numRegular + \" arguments. Found \" +\n            validationResult.realCount + \".\";\n          } else {\n            alertContent = \"You are supposed to pass in \" +\n            validationResult.numRegular + \" required arguments, \" +\n            validationResult.numEqSigns +\" optional arguments. Found \" +\n            validationResult.realCount + \".\";\n          }\n        }\n      }\n      alertbox =\n        <span class=\"testCaseAlert\"\n          id={\"testCaseAlert\" +\n          this.props.testIndex + \"_\" +\n          this.props.testCaseIndex} >\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"testCaseAlert\" +\n                    this.props.testIndex + \"_\" +\n                    this.props.testCaseIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            {alertContent}\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertTestCaseBorder\";\n    }\n    // var shouldDisableInput = validationResult.starPresents === false &&\n    //     validationResult.numEqSigns === 0 && validationResult.numRegular === 0;\n    return(\n      <ListGroupItem className={alertClassName}>\n        <div class=\"tg\">\n          <span class=\"tgAlert\">{alertbox}</span>\n          <span class=\"tgInput\">\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText >{this.props.functionName+\" (\"}</InputGroupText>\n              </InputGroupAddon>\n              <Input placeholder={this.props.functionParams} spellcheck=\"false\"\n                     className=\"forPlaceHolder\"\n                     name=\"testCaseInput\"\n                     data-testid={this.props.testIndex}\n                     data-testcaseid={this.props.testCaseIndex}\n                     onChange={this.props.formHandler}\n                     value={this.props.testCaseData[0]} />\n              <InputGroupAddon addonType=\"append\">\n                <InputGroupText >)</InputGroupText>\n              </InputGroupAddon>\n            </InputGroup>\n          </span>\n          <span class=\"tgArrow\">\n            <svg id=\"rightArrowSVG\" xmlns=\"http://www.w3.org/2000/svg\" width=\"27\" height=\"27\" viewBox=\"0 0 408 408\">\n              <polygon id=\"rightArrowPath\" points=\"204,102 204,0 408,204 204,408 204,306 0,306 0,102   \"/>\n            </svg>\n          </span>\n          <span class=\"tgOutput\">\n            <Input placeholder=\"expected output\"\n                   spellcheck=\"false\"\n                   className=\"forPlaceHolder\"\n                   name=\"testCaseOutput\"\n                   data-testid={this.props.testIndex}\n                   data-testcaseid={this.props.testCaseIndex}\n                   onChange={this.props.formHandler}\n                   value={this.props.testCaseData[1]}/>\n          </span>\n          <button\n            class=\"testCaseDelete\"\n            name=\"testCaseDelete\"\n            data-testid={this.props.testIndex}\n            data-testcaseid={this.props.testCaseIndex}\n            onClick={this.props.formHandler}\n            >\n\n          </button>\n        </div>\n      </ListGroupItem>\n    )\n  }\n}\nexport default FormTestCases;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int, fullScore:String}\nclass FormFullScore extends React.Component {\n  render() {\n    var scoreString = this.props.fullScore;\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    if (scoreString===\"\" || isNaN(scoreString)) {\n      alertbox =\n        <span class=\"labelAlert\" id={\"fullScoreAlert\" + this.props.testIndex}>\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"fullScoreAlert\" + this.props.testIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            Please enter a valid number.\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertBorder\";\n    }\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <div className={alertClassName}>\n          <Label for=\"fullScore\">\n            <span>Full Score:</span>\n            {alertbox}\n          </Label>\n          <Input type=\"text\" name=\"fullScore\"\n            className=\"forPlaceHolder\"\n            placeholder=\"1\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={scoreString} />\n        </div>\n      </FormGroup>\n    )\n  }\n}\nexport default FormFullScore;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int, testType:String}\nclass FormTestType extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <Label for=\"testType\">Test Type:</Label>\n        <Input type=\"select\" name=\"testType\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={this.props.testType} >\n          <option value=\"simple\">simple function</option>\n          <option value=\"unit\">unit test</option>\n        </Input>\n      </FormGroup>\n    )\n  }\n}\nexport default FormTestType;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int,\n//  functionName:String, testName:String}\nclass FormTestName extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <Label for=\"testName\" >\n          Test Name:\n        </Label>\n        <Input type=\"text\" name=\"testName\" spellcheck=\"false\"\n          className=\"forPlaceHolder codeInput\"\n          placeholder={\"Default: \" + this.props.functionName}\n          onChange={this.props.formHandler}\n          data-testid={this.props.testIndex}\n          value={this.props.testName} />\n      </FormGroup>\n    )\n  }\n}\nexport default FormTestName;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int,\n//  partialCredits:String}\nclass FormPartialCredits extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <Label for=\"partialCredits\">Partial Credits:</Label>\n        <Input type=\"select\" name=\"partialCredits\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={this.props.partialCredits} >\n          <option value=\"none\">none</option>\n          <option value=\"linear\">linear (coming soon)</option>\n        </Input>\n      </FormGroup>\n    )\n  }\n}\nexport default FormPartialCredits;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int,\n//  partialCredits:String}\nclass FormSkeletonCode extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <Label for=\"skeletonCode\">\n          {this.props.type === \"simple\" ?\n            \"Skeleton Code:\"\n            :\n            \"Test Code:\"\n          }\n\n        </Label>\n        <Input type=\"textarea\" name=\"skeletonCode\" spellCheck=\"false\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            className=\"forPlaceHolder\"\n            placeholder={this.props.placeholder}\n            value={this.props.skeletonCode} >\n        </Input>\n      </FormGroup>\n    )\n  }\n}\nexport default FormSkeletonCode;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse, Table,\n  UncontrolledTooltip, Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap';\nimport FilteredMultiSelect from 'react-filtered-multiselect';\n\n//props:{formHandler:Function, testIndex:Int,\n//  disallowedUse:String}\nclass FormDisallowedUse extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n  render() {\n    var s = this.props.disallowedUse;\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    if (!s.match(/^(?:\\s*([\"'])(?:Add|And|Assert|Assign|AugAssign|BitAnd|BitOr|BitXor|Break|Recursion|ClassDef|Continue|Del|Delete|Dict|DictComp|Div|Ellipsis|Eq|ExceptHandler|ExtSlice|FloorDiv|For|FunctionDef|GeneratorExp|Global|Gt|GtE|If|IfExp|Import|ImportFrom|In|Index|Invert|Is|IsNot|LShift|Lambda|List|ListComp|Lt|LtE|Mod|Mult|Nonlocal|Not|NotEq|NotIn|Or|Pass|Pow|RShift|Raise|Return|Set|SetComp|Slice|Starred|Sub|Subscript|Try|Tuple|UAdd|USub|While|With|Yield|YieldFrom)\\1\\s*,\\s*)*(?:\\s*([\"'])(?:Add|And|Assert|Assign|AugAssign|BitAnd|BitOr|BitXor|Break|Recursion|ClassDef|Continue|Del|Delete|Dict|DictComp|Div|Ellipsis|Eq|ExceptHandler|ExtSlice|FloorDiv|For|FunctionDef|GeneratorExp|Global|Gt|GtE|If|IfExp|Import|ImportFrom|In|Index|Invert|Is|IsNot|LShift|Lambda|List|ListComp|Lt|LtE|Mod|Mult|Nonlocal|Not|NotEq|NotIn|Or|Pass|Pow|RShift|Raise|Return|Set|SetComp|Slice|Starred|Sub|Subscript|Try|Tuple|UAdd|USub|While|With|Yield|YieldFrom)\\2\\s*)?$/)) {\n      alertbox =\n        <span class=\"labelAlert\" id={\"disallowedUseAlert\"+ this.props.testIndex}>\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"disallowedUseAlert\"+ this.props.testIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            Please enter valid names (exactly as shown, case sensitive) surrounded by quotes and separated by commas.\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertBorder\";\n    }\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <div className={alertClassName}>\n          <Label for=\"disallowedUse\" >\n            <span>\n              Disallowed Use:\n              <span\n                class=\"disallowedUseModalLauncher\"\n                onClick={this.toggle}\n                >?</span>\n              <DisallowedUseModal\n                modal={this.state.modal}\n                toggle={this.toggle}/>\n            </span>\n            {alertbox}\n          </Label>\n          <Input type=\"text\" name=\"disallowedUse\" spellcheck=\"false\"\n            className=\"forPlaceHolder\"\n            placeholder=\"'While', 'For'\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={this.props.disallowedUse} />\n        </div>\n      </FormGroup>\n\n    )\n  }\n\n}\nclass DisallowedUseModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.modal} toggle={this.props.toggle}>\n        <ModalHeader>Construct Check For Disallowed Use</ModalHeader>\n        <ModalBody>\n          <p>Credits: Berkeley CS61A course staff.</p>\n          <p>This amazing python module wrote by CS61A staff checks for certain usage patterns in a python file. Very useful, for example, when you want your testees write a recursive/iterative solution without using loops/recursive calls.</p>\n          <p>To include these checks for disallowed usages, put the names on the left column in quotes and separate them with commas.</p>\n          <p>e.g., 'Add', 'Pow'</p>\n<Table size=\"sm\"><thead><tr><th>Name</th><th>Pattern</th></tr></thead><tbody><tr><td>Add</td><td>+</td></tr><tr><td>And</td><td>and</td></tr><tr><td>Assert</td><td>assert</td></tr><tr><td>Assign</td><td>=</td></tr><tr><td>AugAssign</td><td>op=</td></tr><tr><td>BitAnd</td><td>&</td></tr><tr><td>BitOr</td><td>|</td></tr><tr><td>BitXor</td><td>^</td></tr><tr><td>Break</td><td>break</td></tr><tr><td>Recursion</td><td>recursive call</td></tr><tr><td>ClassDef</td><td>class</td></tr><tr><td>Continue</td><td>continue</td></tr><tr><td>Del</td><td>del</td></tr><tr><td>Delete</td><td>delete</td></tr><tr><td>Dict</td><td>{\"{\"}...{\"}\"}</td></tr><tr><td>DictComp</td><td>{\"{\"}...{\"}\"}</td></tr><tr><td>Div</td><td>/</td></tr><tr><td>Ellipsis</td><td>...</td></tr><tr><td>Eq</td><td>==</td></tr><tr><td>ExceptHandler</td><td>except</td></tr><tr><td>ExtSlice</td><td>[::]</td></tr><tr><td>FloorDiv</td><td>//</td></tr><tr><td>For</td><td>for</td></tr><tr><td>FunctionDef</td><td>def</td></tr><tr><td>GeneratorExp</td><td>(... for ...)</td></tr><tr><td>Global</td><td>global</td></tr><tr><td>Gt</td><td>&gt;</td></tr><tr><td>GtE</td><td>&gt;=</td></tr><tr><td>If</td><td>if</td></tr><tr><td>IfExp</td><td>...if...else...</td></tr><tr><td>Import</td><td>import</td></tr><tr><td>ImportFrom</td><td>from ... import ...</td></tr><tr><td>In</td><td>in</td></tr><tr><td>Index</td><td>...[...]</td></tr><tr><td>Invert</td><td>~</td></tr><tr><td>Is</td><td>is</td></tr><tr><td>IsNot</td><td>is not </td></tr><tr><td>LShift</td><td>&lt;&lt;</td></tr><tr><td>Lambda</td><td>lambda</td></tr><tr><td>List</td><td>[...]</td></tr><tr><td>ListComp</td><td>[...for...]</td></tr><tr><td>Lt</td><td>&lt;</td></tr><tr><td>LtE</td><td>&lt;=</td></tr><tr><td>Mod</td><td>%</td></tr><tr><td>Mult</td><td>*</td></tr><tr><td>Nonlocal</td><td>nonlocal</td></tr><tr><td>Not</td><td>not</td></tr><tr><td>NotEq</td><td>!=</td></tr><tr><td>NotIn</td><td>not in</td></tr><tr><td>Or</td><td>or</td></tr><tr><td>Pass</td><td>pass</td></tr><tr><td>Pow</td><td>**</td></tr><tr><td>RShift</td><td>&gt;&gt;</td></tr><tr><td>Raise</td><td>raise</td></tr><tr><td>Return</td><td>return</td></tr><tr><td>Set</td><td>{\"{\"} ... {\"}\"} (set)</td></tr><tr><td>SetComp</td><td>{\"{\"} ... for ... {\"}\"} (set)</td></tr><tr><td>Slice</td><td>[ : ]</td></tr><tr><td>Starred</td><td></td></tr><tr><td>Sub</td><td>-</td></tr><tr><td>Subscript</td><td>[]</td></tr><tr><td>Try</td><td>try</td></tr><tr><td>Tuple</td><td>(... , ... )</td></tr><tr><td>UAdd</td><td>+</td></tr><tr><td>USub</td><td>-</td></tr><tr><td>While</td><td>while</td></tr><tr><td>With</td><td>with</td></tr><tr><td>Yield</td><td>yield</td></tr><tr><td>YieldFrom</td><td>yield from</td></tr></tbody></Table>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggle}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    )\n  }\n}\nexport default FormDisallowedUse;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\nimport FormFullScore from './FormFullScore';\nimport FormTestType from './FormTestType';\nimport FormTestName from './FormTestName';\nimport FormPartialCredits from './FormPartialCredits';\nimport FormSkeletonCode from './FormSkeletonCode';\nimport FormDisallowedUse from './FormDisallowedUse';\n\n//props:{\n//  formHandler:Function,\n//  testIndex:Int,\n//  pointsEnabled: Boolean,\n//  functionName: String,\n//  advancedSetting: {\n//    fullScore: \"1\",\n//    testType: \"simple\",\n//    testName: \"\",\n//    partialCredits: \"none\",\n//    skeletonCode: \"\",\n//    testForDisallowedUse: String,\n//  }\n//}\nclass FormAdvancedSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.state = {\n      collapse: true,\n      numErrors: 0,\n      status: 'Closed'\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  onExiting() {\n   this.setState({ status: 'Closing...' });\n  }\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    var currNumErrors =\n      document.querySelectorAll(\n        \"#\" + \"formTestCase\"+ this.props.testIndex + ' .advancedSetting .alertBorder').length;\n\n    if (prevState.numErrors !== currNumErrors) {\n      this.setState({numErrors: currNumErrors});\n    }\n  }\n  render() {\n    return (\n      <div class=\"advancedSetting\">\n        <Button className=\"advancedSettingHeader\"\n              color=\"dark\"\n              onClick={this.handleToggle}>\n          Advanced Settings\n          {this.state.numErrors !== 0 && this.state.collapse && this.state.status === 'Closed'?\n            <Badge className=\"numErrorBadge\" color=\"danger\" pill>{this.state.numErrors}</Badge>\n            :\n            \"\"\n          }\n        </Button>\n        <Collapse  isOpen={!this.state.collapse}\n          onExiting={this.onExiting}\n          onExited={this.onExited}>\n          <div class=\"advancedSettingGroup\">\n            {this.props.pointsEnabled && this.props.advancedSetting.testType === \"simple\" &&\n              <FormFullScore\n                formHandler={this.props.formHandler}\n                testIndex={this.props.testIndex}\n                fullScore={this.props.advancedSetting.fullScore}/>\n            }\n            {this.props.pointsEnabled && this.props.advancedSetting.testType === \"simple\" &&\n              <FormPartialCredits\n                formHandler={this.props.formHandler}\n                testIndex={this.props.testIndex}\n                partialCredits={this.props.advancedSetting.partialCredits}/>\n            }\n            <FormTestType\n              formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              testType={this.props.advancedSetting.testType} />\n            <FormTestName\n              formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              functionName={this.props.functionName}\n              testName={this.props.advancedSetting.testName} />\n            <FormSkeletonCode\n              formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              skeletonCode={this.props.advancedSetting.skeletonCode}\n              placeholder=\"'*** YOUR CODE HERE ***'\"\n              type=\"simple\"/>\n            <FormDisallowedUse\n              formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              disallowedUse={this.props.advancedSetting.disallowedUse} />\n            <div class=\"advancedSettingBottomBorder\"></div>\n          </div>\n\n        </Collapse>\n      </div>\n    )\n  }\n}\nexport default FormAdvancedSetting;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\nimport FormFunctionName from './form_test_case_components/FormFunctionName';\nimport FormFunctionParams from './form_test_case_components/FormFunctionParams';\nimport FormDescription from './form_test_case_components/FormDescription';\nimport FormTestCases from './form_test_case_components/FormTestCases';\nimport FormAdvancedSetting from './form_test_case_components/FormAdvancedSetting';\n// import FormFunctionName from './form_test_case_components/FormFunctionName';\n// import FormFunctionName from './form_test_case_components/FormFunctionName';\n// import FormFunctionName from './form_test_case_components/FormFunctionName';\n{\n//  props:{\n//     testData: {\n//       functionName: \"\",\n//       functionParams: \"\",\n//       description: \"\",\n//       testCases: [[\"\", \"\"]],\n//       advancedSetting: {\n//         fullScore: \"1\",\n//         testType: \"simple\",\n//         testName: \"\",\n//         partialCredits: \"none\",\n//         skeletonCode: \"\",\n//         testForDisallowedUse: [],\n//       }\n//     },\n//     testIndex: Int,\n//     questionIndex: Int,\n//     className: String,\n//     pointsEnabled: Boolean,\n//     formHandler: Function\n// }\n}\nclass FormTestCase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.state = {\n      collapse: false,\n      numErrors: 0,\n      status: 'Closed'\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  onExiting() {\n   this.setState({ status: 'Closing...' });\n  }\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    var currNumErrors =\n      document.querySelectorAll(\n        \"#\" + \"formTestCase\"+ this.props.testIndex + ' .alertBorder').length +\n      document.querySelectorAll(\n        \"#\" + \"formTestCase\"+ this.props.testIndex + ' .alertTestCaseBorder').length;\n\n    if (prevState.numErrors !== currNumErrors) {\n      this.setState({numErrors: currNumErrors});\n    }\n  }\n  render() {\n    return (\n      <div class=\"formTestCase\"\n        id={\"formTestCase\"+ this.props.testIndex}>\n      <Button className=\"testHeader\" onClick={this.handleToggle}>\n        {\"Q\" + (this.props.questionIndex + 1) + \" : \"}\n        {this.props.testData.advancedSetting.testName.replace(/\\s/g, '')!==\"\" ?\n          this.props.testData.advancedSetting.testName.replace(/\\s/g, '')\n          :\n          this.props.testData.functionName===\"\" ?\n            \"Untitled\"\n            :\n            this.props.testData.functionName\n        }\n\n        {this.state.numErrors !== 0 && this.state.collapse && this.state.status === 'Closed'?\n          <Badge className=\"numErrorBadge\" color=\"danger\" pill>{this.state.numErrors}</Badge>\n          :\n          \"\"\n        }\n      </Button>\n      <div className=\"headerButtonGroup\">\n          <Button\n            className=\"headerButton\"\n            name=\"headerButtonUp\"\n            data-testid={this.props.testIndex}\n            onClick={this.props.formHandler}\n            >\n            up\n          </Button>\n          <Button\n            className=\"headerButton\"\n            name=\"headerButtonDown\"\n            data-testid={this.props.testIndex}\n            onClick={this.props.formHandler}\n            >\n            down\n          </Button>\n          <Button\n            className=\"headerButton\"\n            name=\"headerButtonDelete\"\n            data-testid={this.props.testIndex}\n            onClick={this.props.formHandler}\n            >\n            delete\n          </Button>\n          <Button\n            className=\"headerButton\"\n            name=\"headerButtonDuplicate\"\n            data-testid={this.props.testIndex}\n            onClick={this.props.formHandler}\n            >\n            duplicate\n          </Button>\n      </div>\n\n      <Collapse  isOpen={!this.state.collapse}\n        onExiting={this.onExiting}\n        onExited={this.onExited}>\n        <div className=\"testCaseBody\">\n          <FormFunctionName formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionName={this.props.testData.functionName}\n            placeholder=\"Fibonacci\"/>\n          <FormFunctionParams formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionName={this.props.testData.functionName}\n            functionParams={this.props.testData.functionParams}\n            placeholder=\"arg1, arg2\"/>\n          <FormDescription formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            description={this.props.testData.description}\n            placeholder=\"Return the Nth fibonacci number.\"\n            type=\"simple\"/>\n          {this.props.testData.advancedSetting.testType === \"simple\" &&\n            <FormTestCases formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              functionName={this.props.testData.functionName}\n              functionParams={this.props.testData.functionParams}\n              testCases={this.props.testData.testCases} />\n          }\n          <FormAdvancedSetting formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            pointsEnabled={this.props.pointsEnabled}\n            functionName={this.props.testData.functionName}\n            advancedSetting={this.props.testData.advancedSetting}\n            testType={this.props.testData.testType}/>\n        </div>\n      </Collapse>\n      </div>\n    )\n  }\n}\n\nexport default FormTestCase;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int,\n//  partialCredits:String}\nclass UnitTestCode extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <Label for=\"unitTestCode\">\n            Test Code:\n        </Label>\n        <Input type=\"textarea\" name=\"unitTestCode\" spellCheck=\"false\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            className=\"forPlaceHolder\"\n            placeholder={this.props.placeholder}\n            value={this.props.unitTestCode} >\n        </Input>\n      </FormGroup>\n    )\n  }\n}\nexport default UnitTestCode;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\nimport {isValidArgList} from \"../testArgs.js\";\n//props:{formHandler:Function, testIndex:Int, functionName:String,\n//        functionParams:String, testCases:[[\"\", \"\"],[\"\", \"\"]]}\nclass FormUnitTestCases extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.state = {\n      collapse: false,\n      numErrors: 0,\n      status: 'Opened'\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  onExiting() {\n   this.setState({ status: 'Closing...' });\n  }\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    var currNumErrors =\n      document.querySelectorAll(\n        \"#\" + \"formUnitTestCase\"+ this.props.testIndex + ' .alertTestCaseBorder').length;\n\n    if (prevState.numErrors !== currNumErrors) {\n      this.setState({numErrors: currNumErrors});\n    }\n  }\n  render() {\n    var testCases = [];\n    for (var i = 0; i < this.props.testCases.length; i++) {\n      testCases.push(\n        <FormTestCaseInner testCaseData={this.props.testCases[i]}\n          testCaseIndex={i}\n          testIndex={this.props.testIndex}\n          functionParams={this.props.functionParams}\n          formHandler={this.props.formHandler}/>\n      )\n    }\n    return (\n      <ListGroup>\n        <Button className=\"testCaseHeader\"\n              color=\"dark\"\n              onClick={this.handleToggle}>\n          Test Cases\n          {this.state.numErrors !== 0 && this.state.collapse && this.state.status === 'Closed'?\n            <Badge className=\"numErrorBadge\" color=\"danger\" pill>{this.state.numErrors}</Badge>\n            :\n            \"\"\n          }\n        </Button>\n        <Collapse  isOpen={!this.state.collapse}\n          onExiting={this.onExiting}\n          onExited={this.onExited}>\n          <div class=\"testCasesGroup\">\n            {testCases}\n            <Button name=\"addUnitTestCase\"\n              className=\"addTestCaseButton\"\n              data-testid={this.props.testIndex}\n              onClick={this.props.formHandler}\n              color=\"secondary\"\n              size=\"sm\">Add Test Case</Button>\n            <div class=\"testCaseBottomBorder\"></div>\n          </div>\n        </Collapse>\n      </ListGroup>\n    )\n  }\n}\n//props:{testCaseData:\"\", testIndex:Int, testCaseIndex:Int,\n//        functionParams:String, formHandler:Function}\nclass FormTestCaseInner extends React.Component {\n  render() {\n    var alertClassName=\"\";\n    var alertbox=\"\";\n    var validationResult = isValidArgList(this.props.functionParams,\n      this.props.testCaseData);\n    if (!validationResult.result) {\n      var alertContent=\"\";\n      if (validationResult.error) {\n        alertContent = \"You have an unmatched symbol error in your No.\"+\n          validationResult.count + \" argument.\";\n      } else {\n        if (validationResult.starPresents === true) {\n          alertContent = \"You are supposed to pass in at least \" +\n            validationResult.numRegular +\" arguments. Found \" +\n            validationResult.realCount + \".\";\n        } else {\n          if (validationResult.numEqSigns === 0) {\n            alertContent = \"You are supposed to pass in \" +\n            validationResult.numRegular + \" arguments. Found \" +\n            validationResult.realCount + \".\";\n          } else {\n            alertContent = \"You are supposed to pass in \" +\n            validationResult.numRegular + \" required arguments, \" +\n            validationResult.numEqSigns +\" optional arguments. Found \" +\n            validationResult.realCount + \".\";\n          }\n        }\n      }\n      alertbox =\n        <span class=\"testCaseAlert\"\n          id={\"testCaseAlert\" +\n          this.props.testIndex + \"_\" +\n          this.props.testCaseIndex} >\n          <UncontrolledTooltip\n            placement=\"right\"\n            target={\"testCaseAlert\" +\n                    this.props.testIndex + \"_\" +\n                    this.props.testCaseIndex}\n            arrowClassName=\"AlertTooltipArrow\"\n            className=\"AlertTooltip\">\n            {alertContent}\n          </UncontrolledTooltip>\n        </span>;\n      alertClassName=\"alertTestCaseBorder\";\n    }\n    // var shouldDisableInput = validationResult.starPresents === false &&\n    //     validationResult.numEqSigns === 0 && validationResult.numRegular === 0;\n    return(\n      <ListGroupItem className={alertClassName}>\n        <div class=\"tgUnit\">\n          <span class=\"tgAlertUnit\">{alertbox}</span>\n          <span class=\"tgInputUnit\">\n            <InputGroup>\n              <Input placeholder={this.props.functionParams} spellcheck=\"false\"\n                     className=\"forPlaceHolder\"\n                     name=\"unitTestCaseInput\"\n                     data-testid={this.props.testIndex}\n                     data-testcaseid={this.props.testCaseIndex}\n                     onChange={this.props.formHandler}\n                     value={this.props.testCaseData} />\n            </InputGroup>\n          </span>\n          <button\n            class=\"testCaseDelete\"\n            name=\"testCaseDelete\"\n            data-testid={this.props.testIndex}\n            data-testcaseid={this.props.testCaseIndex}\n            onClick={this.props.formHandler}\n            >\n\n          </button>\n        </div>\n      </ListGroupItem>\n    )\n  }\n}\nexport default FormUnitTestCases;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse, Modal,ModalHeader, ModalFooter, ModalBody,\n  UncontrolledTooltip\n} from 'reactstrap';\n//props:{formHandler:Function, testIndex:Int, display:String}\nclass FormUnitDisplay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  render() {\n    return (\n      <FormGroup className=\"advancedSettingItem\">\n        <Label for=\"unitDisplay\">\n          Display:\n          <span\n            class=\"unitDisplayModalLauncher\"\n            onClick={this.toggle}\n            >?</span>\n          <UnitDisplayModal\n            modal={this.state.modal}\n            toggle={this.toggle}/>\n        </Label>\n        <Input type=\"select\" name=\"unitDisplay\"\n            onChange={this.props.formHandler}\n            data-testid={this.props.testIndex}\n            value={this.props.display} >\n          <option value=\"show\">show</option>\n          <option value=\"hide\">hide</option>\n        </Input>\n      </FormGroup>\n    )\n  }\n}\n\nclass UnitDisplayModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.modal} toggle={this.props.toggle}>\n        <ModalHeader>Know your NAMESPACE</ModalHeader>\n        <ModalBody>\n          <p>As the name indicates, \"show\" option places your unit test function inside homework.py, so that the students can read it.</p>\n          <p>\"hide\", on the other hand, places your test function inside the test file generated, making it not visible (easily).</p>\n          <p>The pitfall, however, is when your test function is hidden and placed in test.py, it's in a different module than homework.py.\n            Thus, you won't be able to directly call the functions you want to test on as you would in the same homework.py.\n            Fortunately, homework.py has already been imported for you in test.py -- all you need to do is prepend \"homework.\" to the names of\n            functions you want to access in homework.py before calling them.</p>\n          <p> e.g., <code>return student_function(input) == expected</code> when selected \"show\" would become <br/>\n          <code>return homework.student_function(input) == expected</code> when selected \"hide\".</p>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={this.props.toggle}>Close</Button>\n        </ModalFooter>\n      </Modal>\n    )\n  }\n}\n\nexport default FormUnitDisplay;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\nimport FormFullScore from '../form_test_case_components/FormFullScore';\nimport FormUnitDisplay from './FormUnitDisplay';\n//props:{\n//  formHandler:Function,\n//  testIndex:Int,\n//  pointsEnabled: Boolean,\n//  advancedSetting: {\n//    fullScore: \"1\",\n//    display: \"show\"\n//    testType: \"unit_test\",\n//  }\n//}\nclass FormUnitAdvancedSetting extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.state = {\n      collapse: true,\n      numErrors: 0,\n      status: 'Closed'\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  onExiting() {\n   this.setState({ status: 'Closing...' });\n  }\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    var currNumErrors =\n      document.querySelectorAll(\n        \"#\" + \"formUnitTestCase\"+ this.props.testIndex + ' .advancedSetting .alertBorder').length;\n\n    if (prevState.numErrors !== currNumErrors) {\n      this.setState({numErrors: currNumErrors});\n    }\n  }\n  render() {\n    return (\n      <div class=\"advancedSetting\">\n        <Button className=\"advancedSettingHeader\"\n              color=\"dark\"\n              onClick={this.handleToggle}>\n          Advanced Settings\n          {this.state.numErrors !== 0 && this.state.collapse && this.state.status === 'Closed'?\n            <Badge className=\"numErrorBadge\" color=\"danger\" pill>{this.state.numErrors}</Badge>\n            :\n            \"\"\n          }\n        </Button>\n        <Collapse  isOpen={!this.state.collapse}\n          onExiting={this.onExiting}\n          onExited={this.onExited}>\n          <div class=\"advancedSettingGroup\">\n            {this.props.pointsEnabled &&\n              <FormFullScore\n                formHandler={this.props.formHandler}\n                testIndex={this.props.testIndex}\n                fullScore={this.props.advancedSetting.fullScore}/>\n            }\n\n            <FormUnitDisplay\n              formHandler={this.props.formHandler}\n              testIndex={this.props.testIndex}\n              display={this.props.advancedSetting.display} />\n            <div class=\"advancedSettingBottomBorder\"></div>\n          </div>\n\n        </Collapse>\n      </div>\n    )\n  }\n}\nexport default FormUnitAdvancedSetting;\n","import React from 'react';\nimport {\n  FormGroup, Input, Button, Label, Alert,\n  ListGroup, ListGroupItem,InputGroupText,InputGroupAddon,InputGroup,\n  Container, Row, Col,\n  Badge,\n  Collapse,\n  UncontrolledTooltip\n} from 'reactstrap';\nimport FormFunctionName from './form_test_case_components/FormFunctionName';\nimport FormFunctionParams from './form_test_case_components/FormFunctionParams';\nimport FormDescription from './form_test_case_components/FormDescription';\nimport UnitTestCode from './form_unit_test_components/UnitTestCode';\nimport FormUnitTestCases from './form_unit_test_components/FormUnitTestCases';\nimport FormUnitAdvancedSetting from './form_unit_test_components/FormUnitAdvancedSetting';\n\n{\n//  props:{\n//     testData: {\n//       functionName: \"list_pop_test\",\n      // functionParams: \"setup, inputs, expected\",\n      // description: \"Unit test for list_pop. \\n1. Creates a list object lst from setup['originalList']\\n 2. Calls pop_list on the lst object (pop_list(lst, *inputs))\\n 3.Checks if the resulting list is desired. (lst == expected)\",\n      // testCases: [\"{'originalList': [1,2,3,4]}, [0], [2,3,4]\"],\n    //   testCode: \"\",\n      // advancedSetting: {\n      //   fullScore: \"1\",\n      //   display: \"show\",\n      //   testType: \"unit_test\",\n      // }\n//     },\n//     testIndex: Int,\n//     className: String,\n//     pointsEnabled: Boolean,\n//     formHandler: Function\n// }\n}\nclass FormUnitTestCase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.state = {\n      collapse: false,\n      numErrors: 0,\n      status: 'Closed'\n    };\n  }\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n  onExiting() {\n   this.setState({ status: 'Closing...' });\n  }\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    var currNumErrors =\n      document.querySelectorAll(\n        \"#\" + \"formUnitTestCase\"+ this.props.testIndex + ' .alertBorder').length +\n      document.querySelectorAll(\n        \"#\" + \"formUnitTestCase\"+ this.props.testIndex + ' .alertTestCaseBorder').length;\n\n    if (prevState.numErrors !== currNumErrors) {\n      this.setState({numErrors: currNumErrors});\n    }\n  }\n  render() {\n    return (\n      <div class=\"formUnitTestCase\"\n        id={\"formUnitTestCase\"+ this.props.testIndex}>\n      <Button className=\"unitTestHeader\" color=\"warning\" onClick={this.handleToggle}>\n        {\"Unit Test: \" + this.props.testData.functionName}\n\n        {this.state.numErrors !== 0 && this.state.collapse && this.state.status === 'Closed'?\n          <Badge className=\"numErrorBadge\" color=\"danger\" pill>{this.state.numErrors}</Badge>\n          :\n          \"\"\n        }\n      </Button>\n      <span className=\"headerButtonGroupUnit\">\n        <Button\n          className=\"headerButtonUnit\"\n          color=\"warning\"\n          name=\"headerButtonUp\"\n          data-testid={this.props.testIndex}\n          onClick={this.props.formHandler}\n          >\n          up\n        </Button>\n        <Button\n          className=\"headerButtonUnit\"\n          color=\"warning\"\n          name=\"headerButtonDown\"\n          data-testid={this.props.testIndex}\n          onClick={this.props.formHandler}\n          >\n          down\n        </Button>\n        <Button\n          className=\"headerButtonUnit\"\n          color=\"warning\"\n          name=\"headerButtonDelete\"\n          data-testid={this.props.testIndex}\n          onClick={this.props.formHandler}\n          >\n          delete\n        </Button>\n        <Button\n          className=\"headerButtonUnit\"\n          color=\"warning\"\n          name=\"headerButtonDuplicate\"\n          data-testid={this.props.testIndex}\n          onClick={this.props.formHandler}\n          >\n          duplicate\n        </Button>\n      </span>\n\n      <Collapse  isOpen={!this.state.collapse}\n        onExiting={this.onExiting}\n        onExited={this.onExited}>\n        <div className=\"unitTestCaseBody\">\n          <FormFunctionName formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionName={this.props.testData.functionName}\n            placeholder=\"list_pop_test\"/>\n          <FormFunctionParams formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionName={this.props.testData.functionName}\n            functionParams={this.props.testData.functionParams}\n            placeholder=\"setup, input, expected\" />\n          <FormDescription formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            description={this.props.testData.description}\n            placeholder=\"Unit test for list_pop.\"\n            type=\"unit\"/>\n          <UnitTestCode\n            formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            unitTestCode={this.props.testData.testCode}\n            placeholder=\"return True #test passed, False otherwise\"\n            type=\"unit\"/>\n          <FormUnitTestCases formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            functionParams={this.props.testData.functionParams}\n            testCases={this.props.testData.testCases} />\n          <FormUnitAdvancedSetting formHandler={this.props.formHandler}\n            testIndex={this.props.testIndex}\n            pointsEnabled={this.props.pointsEnabled}\n            advancedSetting={this.props.testData.advancedSetting} />\n        </div>\n      </Collapse>\n      </div>\n    )\n  }\n}\n\nexport default FormUnitTestCase;\n","/* eslint-disable max-classes-per-file */\nimport React, { Component } from 'react';\nimport {\n  Form, Label, FormGroup, Input, Button, Collapse,\n} from 'reactstrap';\nimport FormTestCase from './FormTestCase.js';\nimport FormUnitTestCase from './FormUnitTestCase.js';\n\n// props:{\n//  formState:{\n//    pointsEnabled: Bool,\n//    starterCode:String,\n//    tests:[{},{}]\n//  },\n//  formHandler:Function\n// }\nclass InputField extends React.Component {\n  render() {\n    let testList = [];\n    let questionIndex = 0;\n    for (let i = 0; i < this.props.formState.tests.length; i++) {\n      let test = this.props.formState.tests[i];\n      if (test.advancedSetting.testType === 'unit_test') {\n        testList.push(\n          <FormUnitTestCase\ntestData={test}\n            testIndex={i}\n            pointsEnabled={this.props.formState.pointsEnabled}\n            formHandler={this.props.formHandler} \n          />,\n        );\n      } else {\n        testList.push(\n          <FormTestCase\ntestData={test}\n            testIndex={i}\n            questionIndex={questionIndex}\n            pointsEnabled={this.props.formState.pointsEnabled}\n            formHandler={this.props.formHandler} \n          />,\n        );\n        questionIndex++;\n      }\n    }\n    return (\n      <Form className=\"InputField\">\n        <FormPointsEnabled\nformHandler={this.props.formHandler}\n          pointsEnabled={this.props.formState.pointsEnabled}\n        />\n        <FormStarterCode\nformHandler={this.props.formHandler}\n          starterCode={this.props.formState.starterCode}\n        />\n        {testList}\n        <Button\nname=\"addTest\"\nonClick={this.props.formHandler}\n          color=\"secondary\"\nsize=\"sm\"\n        >\nAdd Question\n\n        </Button>\n        <Button\nname=\"addUnitTest\"\nonClick={this.props.formHandler}\n          className=\"addUnitTestButton\"\ncolor=\"warning\"\nsize=\"sm\"\n        >\nAdd Unit Test\n\n        </Button>\n      </Form>\n    );\n  }\n}\n// props:{pointsEnabled:Bool, formHandler:Function}\nclass FormPointsEnabled extends React.Component {\n  render() {\n    return (\n      <FormGroup className=\"pointsEnabledGroup\" check>\n        <Label check>\n          <span\nclassName=\"pointsEnabledButtonGroup\"\n              data-content={\n                this.props.pointsEnabled\n                ? 'Scored'\n                :                'Unscored'\n              }\n            >\n              <input\nclassName=\"tgl tgl-light pointsEnabled\" id=\"cb1\"\n                type=\"checkbox\"\nname=\"pointsEnabled\"\n                onChange={this.props.formHandler}\n                checked={this.props.pointsEnabled} \n              />\n              <label className=\"tgl-btn\" htmlFor=\"cb1\" />\n            </span>\n        </Label>\n\n      </FormGroup>\n    );\n  }\n}\n// props:{starterCode:String, formHandler:Function}\nclass FormStarterCode extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.state = {\n      collapse: true,\n    };\n  }\n\n  handleToggle(e) {\n    this.setState({ collapse: !this.state.collapse });\n  }\n\n  render() {\n    return (\n      <div className=\"starterCodeForm\">\n        <Button className=\"starterCodeHeader\" onClick={this.handleToggle}>\n          Starter Code\n        </Button>\n        <Collapse isOpen={!this.state.collapse}>\n          <div>\n            <Form>\n              <FormGroup id=\"starterFormGroup\">\n                <Label for=\"starterCodeTextarea\">To be placed at the beginning of the homework file. </Label>\n                <Input\ntype=\"textarea\"\n                  value={this.props.starterCode}\n                  onChange={this.props.formHandler}\n                  name=\"starterCode\"\n                  id=\"starterCodeTextarea\"\n                  className=\"codeInput forPlaceHolder\"\n                  placeholder=\"from math import *\"\n                >\n                </Input>\n              </FormGroup>\n            </Form>\n          </div>\n        </Collapse>\n\n      </div>\n\n    );\n  }\n}\nexport default InputField;\n","import React from 'react';\nimport Highlight from 'react-highlight';\nimport {generateHomeworkText} from '../generateHomeworkText.js';\n//props: formState\n// formState:{\n//   pointsEnabled: false,\n//   starterCode: \"\",\n//   tests: [\n//     {\n    //   functionName: \"\",\n    //   functionParams: \"\",\n    //   description: \"\",\n    //   testCases: [[\"\", \"\"]],\n    //   advancedSetting: {\n    //     fullScore: \"1\",\n    //     testType: \"simple\",\n    //     testName: \"\",\n    //     partialCredits: \"none\",\n    //     skeletonCode: \"'*** YOUR CODE HERE ***'\",\n    //     disallowedUse: \"\",\n    //   }\n    // };\n//   ]\n// },\nclass HomeworkPreview extends React.Component {\n  render() {\n    let text = generateHomeworkText(this.props.formState);\n    return (\n      <Highlight className={\"python \" + this.props.className}>\n        {text}\n      </Highlight>\n    )\n  }\n}\nexport default HomeworkPreview;\n","import React from 'react';\nimport Highlight from 'react-highlight';\n\n// props:{\n//   testName: \"\",\n//   functionParams:\"\",\n//   disallowedUse: \"\",\n//   fullScore: \"\",\n//   pointsEnabled: false,\n//   testType: \"\"\n//   testCases: [\n//     [\"\", \"\"],\n//     [\"\", \"\"]\n//   ]\n// }\nclass TestSummaryQuestion extends React.Component {\n  render() {\n    var testCases = this.props.testCases;\n    var testName = this.props.testName;\n    var fullScore = this.props.fullScore;\n    var disallowedUse = this.props.disallowedUse;\n    var pointsEnabled = this.props.pointsEnabled;\n    var testType = this.props.testType;\n    var testCasesList = [];\n    var length = this.props.testCases.length;\n    // var colorSeed = Math.floor(Math.random() * 360);\n    for (var i = 0; i < length; i++) {\n      var hue = 360 / length * i ;\n      var style = {backgroundColor: \"hsl(\" + hue + \", 40%, 93%)\"};\n      testCasesList.push(\n        testType === \"simple\" ?\n        <li class=\"testSummaryTestCase\" style={style}>\n          <span class=\"testSummaryInput\">{testCases[i][0]}</span>\n          <span>{\"=>\"}</span>\n          <span class=\"testSummaryOutput\">{testCases[i][1]}</span>\n        </li>\n        :\n        <li class=\"testSummaryTestCase\" style={style}>\n          <span class=\"testSummaryInput\">{testCases[i]}</span>\n        </li>\n      );\n    }\n    return (\n      <ul class={this.props.testType === \"unit_test\" ?\n          \"testSummaryUnit\"\n          :\n          \"testSummaryQuestion\"}>\n        <li class=\"testSummaryTestName\">\n         {testName + (pointsEnabled ? (\"  (\" + fullScore + \" Pts)\") : \"\") }\n        </li>\n\n\n        {testType === \"simple\" && disallowedUse.replace(/\\s/g, '') !== \"\" ?\n          <li class=\"testSummaryDisallowedUse\"> {\"Disallowed Usages: \" + disallowedUse} </li>\n          :\n          \"\"\n        }\n        <span class=\"TSTestCases\">Test Cases: </span><br/>\n        <ul class=\"testSummaryTestCases\">\n          <span class=\"TSTestCaseParams\">{\"Params: ( \" + this.props.functionParams + \" )\"}</span>\n          {testCasesList}\n        </ul>\n      </ul>\n    )\n  }\n}\n\n\nexport default TestSummaryQuestion;\n","import React from 'react';\nimport Highlight from 'react-highlight';\nimport TestSummaryQuestion from './TestSummaryQuestion';\n\n//props: formState\n// formState:{\n//   pointsEnabled: false,\n//   starterCode: \"\",\n//   tests: [\n//     {\n    //   functionName: \"\",\n    //   functionParams: \"\",\n    //   description: \"\",\n    //   testCases: [[\"\", \"\"]],\n    //   advancedSetting: {\n    //     fullScore: \"1\",\n    //     testType: \"simple\",\n    //     testName: \"\",\n    //     partialCredits: \"none\",\n    //     skeletonCode: \"'*** YOUR CODE HERE ***'\",\n    //     disallowedUse: \"\",\n    //   }\n    // };\n//   ]\n// },\nclass TestSummary extends React.Component {\n  render() {\n    var formState = this.props.formState;\n    var questionList = [];\n    var tests = formState.tests;\n    for (var i = 0; i < tests.length; i++) {\n      var currTest = tests[i];\n      var testType = currTest.advancedSetting.testType;\n\n      questionList.push(\n        testType !== \"unit\" &&\n        <TestSummaryQuestion\n          testName={\n            testType === \"unit_test\" ?\n              \"Unit Test: \" + currTest.functionName\n              :\n              \"Q\" + (i + 1) + \": \" +\n              (\n                currTest.advancedSetting.testName.replace(/\\s/g, '') !== \"\" ?\n                currTest.advancedSetting.testName\n                :\n                currTest.functionName\n              )\n          }\n          disallowedUse={currTest.advancedSetting.disallowedUse}\n          fullScore={currTest.advancedSetting.fullScore}\n          testCases={currTest.testCases}\n          pointsEnabled={formState.pointsEnabled}\n          functionParams={tests[i].functionParams}\n          testType={testType}\n          />\n      );\n    }\n    return (\n      <div class=\"testSummary\">\n        {formState.pointsEnabled ?\n          <span id=\"TSTotalScore\">Total Score: {totalPoints(formState.tests)}</span>\n          :\n          <span id=\"TSTotalScore\">Score Disabled.</span>\n        }\n        {questionList}\n     </div>\n    )\n  }\n}\n\nfunction totalPoints(tests) {\n  var sum = 0;\n  for (var i = 0; i < tests.length; i++) {\n    if (tests[i].advancedSetting.testType !== \"unit\") {\n      sum += parseInt(tests[i].advancedSetting.fullScore);\n    }\n  }\n  return sum;\n}\nexport default TestSummary;\n","import React, { Component } from 'react';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\nimport classnames from 'classnames';\nimport HomeworkPreview from './output_components/HomeworkPreview';\nimport TestSummary from './output_components/TestSummary';\n//props: formState\nclass OutputField extends React.Component {\n  // render() {\n  //   return (\n  //     // <textarea value={JSON.stringify(this.props.formState)}></textarea>\n  //\n  //   )\n  // }\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1'\n    };\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  render() {\n    return (\n      <div class=\"gcd\">\n        <div class=\"outputField\">\n        <Nav tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              homework.py\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              test summary\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent\n          activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            <Row>\n              <Col sm=\"12\">\n                <HomeworkPreview\n                  className=\"homeworkPreview\"\n                  formState={this.props.formState}\n                  />\n              </Col>\n            </Row>\n          </TabPane>\n          <TabPane tabId=\"2\">\n            <Row>\n              <Col>\n                <TestSummary\n                 formState={this.props.formState}\n                  />\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n      </div>\n      </div>\n    );\n  }\n}\nexport default OutputField\n","import React from 'react';\n// import logo from './logo.svg';\nimport Split from 'react-split';\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport { Container, Row, Col } from 'reactstrap';\nimport TopNav from './containers/TopNav/index';\nimport InputField from './containers/InputField';\nimport OutputField from './containers/OutputField';\nimport { generateHomeworkText } from './containers/generateHomeworkText.js';\nimport { generateTest } from './containers/generateTest.js';\n\n// if (process.env.NODE_ENV !== 'production') {\n//   const {whyDidYouUpdate} = require('why-did-you-update');\n//   whyDidYouUpdate(React);\n// }\nclass HomeworkEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.state = {\n      formState: {\n        pointsEnabled: false,\n        starterCode: '',\n        tests: [createInitialTestData()],\n      },\n    };\n    // this.state = {\"pointsEnabled\":true,\"starterCode\":\"from math import *\",\"tests\":[{\"functionName\":\"multiply_loop\",\"functionParams\":\"a, b\",\"description\":\"Return `a` multiplied with `b`. Please use a loop with \\\"+\\\". Do not use \\\"*\\\" or recursion.\",\"testCases\":[[\"1, 1\",\"1\"],[\"1, 2\",\"2\"],[\"2, 2\",\"4\"],[\"2, 3 \",\"6\"],[\"9,9 \",\"81\"],[\"100, 100\",\"10000\"],[\"5, 6\",\"30\"],[\"8, 9\",\"72\"],[\"9, 8\",\"72\"],[\"3, 6\",\"18\"],[\"5, 8\",\"40\"]],\"advancedSetting\":{\"fullScore\":\"1\",\"testType\":\"simple\",\"testName\":\"\",\"partialCredits\":\"none\",\"skeletonCode\":\"'*** YOUR CODE HERE ***'\",\"disallowedUse\":\"\\\"Recursion\\\", \\\"Mult\\\"\"}},{\"functionName\":\"multiply_recursion\",\"functionParams\":\"a, b\",\"description\":\"Return `a` multiplied with `b`. Please use recursion with \\\"+\\\". Do not use \\\"*\\\" or any form of loops.\",\"testCases\":[[\"1, 1\",\"1\"],[\"1, 2\",\"2\"],[\"2, 2\",\"4\"],[\"2, 3 \",\"6\"],[\"9,9 \",\"81\"],[\"100, 100\",\"10000\"],[\"5, 6\",\"30\"],[\"8, 9\",\"72\"],[\"9, 8\",\"72\"],[\"3, 6\",\"18\"],[\"5, 8\",\"40\"]],\"advancedSetting\":{\"fullScore\":\"1\",\"testType\":\"simple\",\"testName\":\"\",\"partialCredits\":\"none\",\"skeletonCode\":\"'*** YOUR CODE HERE ***'\",\"disallowedUse\":\"\\\"While\\\", \\\"For\\\"\"}},{\"functionName\":\"\",\"functionParams\":\"\",\"description\":\"\",\"testCases\":[[\"\",\"\"]],\"advancedSetting\":{\"fullScore\":\"1\",\"testType\":\"simple\",\"testName\":\"\",\"partialCredits\":\"none\",\"skeletonCode\":\"'*** YOUR CODE HERE ***'\",\"disallowedUse\":\"\"}}]};\n  }\n\n  componentDidMount() {\n    const localFormState = window.localStorage.getItem('formState');\n    if (localFormState) {\n      this.setState({ formState: JSON.parse(localFormState) });\n    }\n  }\n\n  handleInputChange(e) {\n    const newFormState = JSON.parse(JSON.stringify(this.state.formState));\n    switch (e.target.name) {\n      case 'save':\n        download(\n          JSON.stringify(this.state.formState, null, 2),\n          `MySession_at_${new Date()\n            .toLocaleString()\n            .replace(', ', '_')\n            .replace(' ', '_')}.autoAG`,\n          'text/plain',\n        );\n        // console.log(JSON.stringify(this.state.formState));\n        // console.log(JSON.parse(JSON.stringify(this.state.formState)));\n        break;\n      case 'import':\n        const inputElement = document.getElementById('importFile');\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          this.setState({\n            formState: JSON.parse(event.target.result),\n          });\n        }; // desired file content\n        if (inputElement.files[0]) {\n          reader.readAsText(inputElement.files[0]); // you could also read images and other binaries\n        }\n        break;\n      case 'export':\n        const zip = new JSZip();\n        zip\n          .folder('homework')\n          .file('homework.py', generateHomeworkText(this.state.formState))\n          .file('test', generateTest(this.state.formState));\n        zip.generateAsync({ type: 'blob' }).then((content) => {\n          FileSaver.saveAs(content, 'homework.zip');\n        });\n        break;\n      case 'helpAddSimpleQuestions':\n        newFormState.tests = newFormState.tests.concat(genSimpleQuestions());\n        break;\n      case 'helpAddDisallowedUses':\n        newFormState.tests = newFormState.tests.concat(genDisallowedUses());\n        break;\n      case 'helpAddUnitTests':\n        newFormState.tests = newFormState.tests.concat(genUnitTests());\n        break;\n      case 'pointsEnabled':\n        newFormState.pointsEnabled = e.target.checked;\n        break;\n      case 'starterCode':\n        newFormState.starterCode = e.target.value;\n        break;\n      case 'addTest':\n        newFormState.tests.push(createInitialTestData());\n        break;\n      case 'addUnitTest':\n        newFormState.tests.push(createUnitTestTest(null));\n        break;\n      case 'testType':\n        newFormState.tests[e.target.dataset.testid].advancedSetting.testType = e.target.value;\n        if (e.target.value === 'unit') {\n          newFormState.tests.splice(\n            parseInt(e.target.dataset.testid) + 1,\n            0,\n            createUnitTestTest(newFormState.tests[e.target.dataset.testid]),\n          );\n        }\n        break;\n      case 'unitDisplay':\n        newFormState.tests[e.target.dataset.testid].advancedSetting.display = e.target.value;\n        break;\n      case 'fullScore':\n        newFormState.tests[e.target.dataset.testid].advancedSetting.fullScore = e.target.value;\n        break;\n      case 'functionName':\n        newFormState.tests[e.target.dataset.testid].functionName = e.target.value;\n        break;\n      case 'functionParams':\n        newFormState.tests[e.target.dataset.testid].functionParams = e.target.value;\n        break;\n      case 'formDescription':\n        newFormState.tests[e.target.dataset.testid].description = e.target.value;\n        break;\n      case 'addTestCase':\n        newFormState.tests[e.target.dataset.testid].testCases.push(['', '']);\n        break;\n      case 'addUnitTestCase':\n        newFormState.tests[e.target.dataset.testid].testCases.push('');\n        break;\n      case 'testCaseInput':\n        newFormState.tests[e.target.dataset.testid].testCases[\n          e.target.dataset.testcaseid\n        ][0] = e.target.value;\n        break;\n      case 'unitTestCaseInput':\n        newFormState.tests[e.target.dataset.testid].testCases[\n          e.target.dataset.testcaseid\n        ] = e.target.value;\n        break;\n      case 'testCaseOutput':\n        newFormState.tests[e.target.dataset.testid].testCases[\n          e.target.dataset.testcaseid\n        ][1] = e.target.value;\n        break;\n      case 'testName':\n        newFormState.tests[e.target.dataset.testid].advancedSetting.testName = e.target.value;\n        break;\n      case 'partialCredits':\n        newFormState.tests[\n          e.target.dataset.testid\n        ].advancedSetting.partialCredits = e.target.value;\n        break;\n      case 'skeletonCode':\n        newFormState.tests[\n          e.target.dataset.testid\n        ].advancedSetting.skeletonCode = e.target.value;\n        break;\n      case 'unitTestCode':\n        newFormState.tests[e.target.dataset.testid].testCode = e.target.value;\n        break;\n      case 'disallowedUse':\n        newFormState.tests[\n          e.target.dataset.testid\n        ].advancedSetting.disallowedUse = e.target.value;\n        break;\n      case 'headerButtonUp':\n        e.stopPropagation();\n        if (e.target.dataset.testid != 0) {\n          var temp = newFormState.tests[e.target.dataset.testid];\n          newFormState.tests[e.target.dataset.testid] = newFormState.tests[e.target.dataset.testid - 1];\n          newFormState.tests[e.target.dataset.testid - 1] = temp;\n        }\n        break;\n      case 'headerButtonDown':\n        e.stopPropagation();\n        if (e.target.dataset.testid != newFormState.tests.length - 1) {\n          var temp = newFormState.tests[e.target.dataset.testid];\n          newFormState.tests[e.target.dataset.testid] = newFormState.tests[parseInt(e.target.dataset.testid) + 1];\n          newFormState.tests[parseInt(e.target.dataset.testid) + 1] = temp;\n          //   console.log(newFormState[\"tests\"][e.target.dataset.testid + 1]);\n        }\n        break;\n      case 'headerButtonDelete':\n        e.stopPropagation();\n        newFormState.tests.splice(e.target.dataset.testid, 1);\n        break;\n      case 'headerButtonDuplicate':\n        e.stopPropagation();\n        newFormState.tests.splice(\n          parseInt(e.target.dataset.testid) + 1,\n          0,\n          JSON.parse(\n            JSON.stringify(newFormState.tests[e.target.dataset.testid]),\n          ),\n        );\n        break;\n      case 'testCaseDelete':\n        e.preventDefault();\n        newFormState.tests[e.target.dataset.testid].testCases.splice(\n          e.target.dataset.testcaseid,\n          1,\n        );\n        break;\n      default:\n        console.log('Should go here, exiting...');\n        return;\n    }\n    window.localStorage.setItem('formState', JSON.stringify(newFormState));\n    this.setState({ formState: newFormState });\n  }\n\n  render() {\n    return (\n      <div>\n        <TopNav\n          formHandler={this.handleInputChange}\n          formState={this.state.formState}\n        />\n        <Split className=\"split\" sizes={[60, 40]} minSize={[350, 200]}>\n          <InputField\n            formState={this.state.formState}\n            formHandler={this.handleInputChange}\n          />\n          <OutputField\n            className=\"outputField\"\n            formState={this.state.formState}\n          />\n        </Split>\n      </div>\n    );\n  }\n}\nfunction createInitialTestData() {\n  return {\n    functionName: '',\n    functionParams: '',\n    description: '',\n    testCases: [['', '']],\n    advancedSetting: {\n      fullScore: '1',\n      testType: 'simple',\n      testName: '',\n      partialCredits: 'none',\n      skeletonCode: \"'*** YOUR CODE HERE ***'\",\n      disallowedUse: '',\n    },\n  };\n}\n\nfunction createUnitTestTest(t) {\n  if (t === null) {\n    return {\n      functionName: '',\n      functionParams: '',\n      description: '',\n      testCases: [''],\n      testCode: '',\n      advancedSetting: {\n        fullScore: '1',\n        display: 'show',\n        testType: 'unit_test',\n      },\n    };\n  }\n  return {\n    functionName: `${t.functionName}_test`,\n    functionParams: 'inputs, expected',\n    description: `Unit test for ${t.functionName}.`,\n    testCases: t.testCases.map((x) => `[${x[0]}], ${x[1]}`),\n    testCode:\n      `assert ${t.functionName}(*inputs) == expected, 'Output differ from expected. Current test failed.' \\n`\n      + 'return True',\n    advancedSetting: {\n      fullScore: '1',\n      display: 'show',\n      testType: 'unit_test',\n    },\n  };\n}\n\nfunction genSimpleQuestions() {\n  return [\n    {\n      functionName: 'twenty_nineteen',\n      functionParams: '',\n      description: 'Come up with the most creative way of returning 2019.',\n      testCases: [['', '2019']],\n      advancedSetting: {\n        fullScore: '1',\n        testType: 'simple',\n        testName: '',\n        partialCredits: 'none',\n        skeletonCode: 'return ________ #FIXME',\n        disallowedUse: '',\n      },\n    },\n    {\n      functionName: 'add',\n      functionParams: 'a, b',\n      description: 'Return the sum of `a` and `b`.',\n      testCases: [\n        ['0, 0', '0'],\n        ['0, 1', '1'],\n        ['1, 0', '1'],\n        ['1, 1', '2'],\n        ['9, 8', '17'],\n        ['42, 42', '84'],\n        ['100, 1000', '1100'],\n      ],\n      advancedSetting: {\n        fullScore: '1',\n        testType: 'simple',\n        testName: '',\n        partialCredits: 'none',\n        skeletonCode: \"'*** YOUR CODE HERE ***'\",\n        disallowedUse: '',\n      },\n    },\n    {\n      functionName: 'two_sum',\n      functionParams: 'nums, target',\n      description:\n        'Given an array of integers, return indices of the two numbers such that \\nthey add up to a specific target.\\n\\nYou may assume that each input would have exactly one solution, and you may \\nnot use the same element twice.\\n\\n:type nums: List[int]\\n:type target: int\\n:rtype: List[int]\\n\\nFrom LeetCode.',\n      testCases: [\n        ['[1, 2, 3, 4], 3', '[0, 1]'],\n        ['[6, 3, 2, 4], 7', '[1, 3]'],\n        ['[2, 4, 5, 3, 10, 9, 6], 11', '[3, 5]'],\n        ['[12, 13, 19, 18, 15], 33', '[3, 4]'],\n      ],\n      advancedSetting: {\n        fullScore: '1',\n        testType: 'simple',\n        testName: '',\n        partialCredits: 'none',\n        skeletonCode: \"'*** YOUR CODE HERE ***'\",\n        disallowedUse: '',\n      },\n    },\n  ];\n}\nfunction genDisallowedUses() {\n  return [\n    {\n      functionName: 'gcd_recur',\n      functionParams: 'a, b',\n      description:\n        'Return the greatest common divisor of A and B. Consider using The \\nEuclidean Algorithm: If a is greater than b and a is not divisible \\nby b, then: gcd(a, b) = gcd(b, a % b).\\n\\nPlease use a recursive solution.',\n      testCases: [\n        ['34, 19', '1'],\n        ['25, 5', '5'],\n        ['20, 30', '10'],\n        ['40, 40', '40'],\n        ['17, 289', '17'],\n        ['60, 48', '12'],\n        ['59, 27', '1'],\n        ['684, 1767', '57'],\n        ['5, 0', '5'],\n        ['0, 5', '5'],\n      ],\n      advancedSetting: {\n        fullScore: '1',\n        testType: 'simple',\n        testName: '',\n        partialCredits: 'none',\n        skeletonCode:\n          'if ______: #FIXME\\n    return a\\nelse:\\n    return ________ #FIXME',\n        disallowedUse: '\"While\", \"For\"',\n      },\n    },\n    {\n      functionName: 'gcd_iter',\n      functionParams: 'a, b',\n      description:\n        'Return the greatest common divisor of A and B. Consider using The \\nEuclidean Algorithm: If a is greater than b and a is not divisible \\nby b, then: gcd(a, b) = gcd(b, a % b).\\n\\nPlease use an iterative solution.',\n      testCases: [\n        ['34, 19', '1'],\n        ['25, 5', '5'],\n        ['20, 30', '10'],\n        ['40, 40', '40'],\n        ['17, 289', '17'],\n        ['60, 48', '12'],\n        ['59, 27', '1'],\n        ['684, 1767', '57'],\n        ['5, 0', '5'],\n        ['0, 5', '5'],\n      ],\n      advancedSetting: {\n        fullScore: '1',\n        testType: 'simple',\n        testName: '',\n        partialCredits: 'none',\n        skeletonCode:\n          'while ________: #FIXME\\n    a, b = ________ #FIXME\\nreturn ________ #FIXME',\n        disallowedUse: '\"Recursion\"',\n      },\n    },\n  ];\n}\nfunction genUnitTests() {\n  return [\n    {\n      functionName: 'pop_front',\n      functionParams: 'lst',\n      description: 'Remove and return the first element in LST.',\n      testCases: [['', '']],\n      advancedSetting: {\n        fullScore: '1',\n        testType: 'unit',\n        testName: '',\n        partialCredits: 'none',\n        skeletonCode: \"'*** YOUR CODE HERE ***'\",\n        disallowedUse: '',\n      },\n    },\n    {\n      functionName: 'pop_front_test',\n      functionParams: 'lst, expected_lst, expected_ret',\n      description: 'Unit test for pop_front.',\n      testCases: [\n        '[1, 2, 3, 4], [2, 3, 4], 1 ',\n        '[\"Hi\", \"y\\'all\"], [\"y\\'all\"], \"Hi\"',\n        '[[\"nested!\"]], [], [\"nested!\"]',\n      ],\n      testCode:\n        '\\n#set up error message\\nerror_msg = \"lst = \" + lst.__repr__()\\nerror_msg += \"\\\\n Running pop_front on lst...\"\\n\\n#run test\\nret = pop_front(lst)\\n\\n#check return value\\nif ret != expected_ret:\\n    print(error_msg)\\n    print(\"Should return\", expected_ret)\\n    print(\"Got:\", ret)\\n    #Return False to report to autoAG failure of current test. \\n    #You could also throw an error; autoAG will catch it.\\n    return False \\n\\n#check original list\\nif lst != expected_lst:\\n    print(error_msg)\\n    print(\"lst should be\", expected_lst)\\n    print(\"Got:\", lst)\\n    return False\\n\\n#Return True to report to autoAG success of current test.\\nreturn True',\n      advancedSetting: {\n        fullScore: '1',\n        display: 'show',\n        testType: 'unit_test',\n      },\n    },\n  ];\n}\n// Function to download data to a file\nfunction download(data, filename, type) {\n  const file = new Blob([data], { type });\n  if (window.navigator.msSaveOrOpenBlob) {\n    // IE10+\n    window.navigator.msSaveOrOpenBlob(file, filename);\n  } else {\n    // Others\n    const a = document.createElement('a');\n    const url = URL.createObjectURL(file);\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    }, 0);\n  }\n}\n\nexport default HomeworkEditor;\n","import React, { useState, useEffect } from 'react';\nimport { Button } from 'reactstrap';\nimport { getSkeleton } from 'services/';\nimport { save } from 'utils/';\n\nconst HomeworkEntry = (props) => {\n  const {\n    homeworkId, author, name, time, onOpenSubmitModal,\n  } = props;\n\n  const handleGetSkeleton = () => {\n    getSkeleton(homeworkId).then((res) => {\n      save('homework.py', res);\n    });\n  };\n\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{homeworkId}</td>\n      <td>{author}</td>\n      <td>{time}</td>\n      <td><div><Button onClick={handleGetSkeleton}>Get Skeleton</Button></div></td>\n      <td><Button onClick={() => { onOpenSubmitModal(homeworkId, name); }}>Submit</Button></td>\n    </tr>\n  );\n};\n\nexport default HomeworkEntry;\n","// eslint-disable-next-line import/prefer-default-export\nexport const save = (filename, data) => {\n  const blob = new Blob([data], { type: 'text' });\n  //   const newWindow = window.open('/');\n  //   newWindow.onload = () => {\n  //     newWindow.location = URL.createObjectURL(blob);\n  //   };\n\n\n  if (window.navigator.msSaveOrOpenBlob) {\n    window.navigator.msSaveBlob(blob, filename);\n  } else {\n    const elem = window.document.createElement('a');\n    elem.href = window.URL.createObjectURL(blob);\n    elem.download = filename;\n    document.body.appendChild(elem);\n    elem.click();\n    document.body.removeChild(elem);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  Button, Modal, ModalBody, ModalHeader, ModalFooter, Input,\n} from 'reactstrap';\n\nconst SubmitModal = (props) => {\n  const {\n    isOpen, toggle, homeworkId, name, onSubmit,\n  } = props;\n\n  const handleSubmit = () => {\n    const inputElement = document.getElementById('submit-file');\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      onSubmit(homeworkId, event.target.result);\n    }; // desired file content\n    if (inputElement.files[0]) {\n      reader.readAsText(inputElement.files[0]); // you could also read images and other binaries\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} toggle={toggle}>\n      <ModalHeader toggle={toggle}>\n        Submit to homework:\n        {' '}\n        <code>{name}</code>\n      </ModalHeader>\n      <ModalBody>\n          Please upload homework.py:\n        <Input type=\"file\" id=\"submit-file\" />\n\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n        {' '}\n        <Button color=\"primary\" onClick={() => { toggle(); handleSubmit(); }}>Submit</Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default SubmitModal;\n","import React, { useState, useEffect } from 'react';\nimport classnames from 'classnames';\nimport './index.scss';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nconst SubmitStatus = (props) => {\n  const { name, homeworkId, statusObj } = props;\n  const [resultModalOpen, setResultModalOpen] = useState();\n  const handleToggle = () => {\n    setResultModalOpen(!resultModalOpen);\n  };\n\n  return (\n    <tr className=\"submit-status\">\n      <Modal modalClassName=\"submit-status-modal\" isOpen={resultModalOpen} toggle={handleToggle}>\n        <ModalHeader toggle={handleToggle}>\n            Autograder Result\n        </ModalHeader>\n        <ModalBody>\n          <div className=\"submit-status-result\">{statusObj.result}</div>\n        </ModalBody>\n      </Modal>\n      <td className=\"submit-status-td\" colSpan={6}>\n        <div className={classnames('submit-status-td-div', {\n          'submit-status-td-div-green': statusObj.status === 'Submitted',\n          'submit-status-td-div-yellow': statusObj.status === 'Submitting',\n          'submit-status-td-div-red': statusObj.status === 'Failed',\n        })}\n        >\n          <div className=\"submit-status-left\">{statusObj.status}</div>\n          <div className=\"submit-status-right\">\n            {statusObj.status === 'Submitted'\n              ? <span onClick={handleToggle}>View Result</span>\n              : statusObj.status === 'Failed'\n                ? statusObj.msg : ''}\n          </div>\n        </div>\n      </td>\n    </tr>\n  );\n};\nexport default SubmitStatus;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Navbar, NavbarBrand, NavItem, NavLink, InputGroup, InputGroupAddon, Input, Button, Form, FormGroup, Label, Table, Alert, Modal,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport './index.scss';\nimport Pagination from 'react-js-pagination';\nimport { uploadSolution, listHomeworks } from 'services/';\nimport moment from 'moment';\nimport LoadingOverlay from 'react-loading-overlay';\nimport HomeworkEntry from './HomeworkEntry';\nimport SubmitModal from './SubmitModal';\nimport SubmitStatus from './SubmitStatus';\n\n\nconst SubmitSolution = () => {\n  const [currPage, setCurrPage] = useState(1);\n  const [content, setContent] = useState([]);\n  const [dateDescending] = useState(true);\n  const [perPage, setPerPage] = useState(10);\n  const [homeworkId, setHomeworkId] = useState('');\n  const [totalPages, setTotalPages] = useState(1);\n  const [submitModalHomeworkId, setSubmitModalHomeworkId] = useState('');\n  const [submitModalHomeworkName, setSubmitModalHomeworkName] = useState('');\n  const [submitModalOpen, setSubmitModalOpen] = useState(false);\n  const [homeworkIdToPost, setHomeworkIdToPost] = useState('');\n  const [submitted, setSubmitted] = useState({});\n  const [showLoadingOverlay, setShowLoadingOverlay] = useState(false);\n  const [overlayText, setOverlayText] = useState('Loading...');\n  const [overlaySpinner, setOverlaySpinner] = useState(true);\n\n  const updateList = () => {\n    setOverlayText('Loading...');\n    setShowLoadingOverlay(true);\n    setOverlaySpinner(true);\n    listHomeworks({\n      currPage, perPage, dateDescending, homeworkId: homeworkIdToPost,\n    }).then((data) => {\n      setTotalPages(data.total);\n      const convertedContent = data.content.map((hw) => {\n        hw.time = moment(hw.time).local().format('lll');\n        return hw;\n      });\n      setContent(convertedContent);\n      if (data.total === 0) {\n        setOverlaySpinner(false);\n        setOverlayText('No item found.');\n      } else {\n        setShowLoadingOverlay(false);\n      }\n    }).catch((msg) => {\n      setOverlayText(msg);\n      setOverlaySpinner(false);\n    });\n  };\n\n  useEffect(() => {\n    updateList();\n  }, [currPage, dateDescending, perPage, homeworkIdToPost]);\n\n  const handleChangePage = (newPageNumber) => {\n    setCurrPage(newPageNumber);\n  };\n\n  const handlePerPageChange = (e) => {\n    setPerPage(e.target.value);\n    setCurrPage(1);\n  };\n\n  const handleSearch = () => {\n    setHomeworkIdToPost(homeworkId);\n  };\n\n  const handleInputChange = (e) => {\n    setHomeworkId(e.target.value);\n  };\n\n  const handleOpenSubmitModal = (id, name) => {\n    setSubmitModalHomeworkId(id);\n    setSubmitModalHomeworkName(name);\n    setSubmitModalOpen(true);\n  };\n\n  const handleToggleSubmitModal = () => {\n    setSubmitModalOpen(!submitModalOpen);\n  };\n\n  const handleSubmit = (id, solutionString) => {\n    setSubmitted({\n      ...submitted,\n      ...{\n        [id]: {\n          status: 'Submitting',\n        },\n      },\n    });\n    uploadSolution(id, solutionString).then((res) => {\n      setSubmitted({\n        ...submitted,\n        ...{\n          [id]: {\n            status: 'Submitted', result: res,\n          },\n        },\n      });\n    }).catch((msg) => {\n      setSubmitted({\n        ...submitted,\n        ...{\n          [id]: {\n            status: 'Failed', msg,\n          },\n        },\n      });\n    });\n  };\n\n  const createContentList = () => {\n    const ret = [];\n\n    content.map((hw) => {\n      ret.push(<HomeworkEntry\n        onOpenSubmitModal={handleOpenSubmitModal}\n        homeworkId={hw.homeworkId}\n        author={hw.author}\n        name={hw.name}\n        time={hw.time}\n      />);\n      if (submitted.hasOwnProperty(hw.homeworkId)) {\n        ret.push(\n          <SubmitStatus\n            name={hw.name}\n            homeworkId={hw.homeworkId}\n            statusObj={submitted[hw.homeworkId]}\n          />,\n        );\n      }\n    });\n    return ret;\n  };\n\n  return (\n    <div>\n      <SubmitModal\n        isOpen={submitModalOpen}\n        toggle={handleToggleSubmitModal}\n        homeworkId={submitModalHomeworkId}\n        name={submitModalHomeworkName}\n        onSubmit={handleSubmit}\n      />\n      <Navbar light className=\"submit-bar\">\n        <NavbarBrand className=\"submit-brand\">autoAG</NavbarBrand>\n        <NavLink className=\"submit-publish\">\n          {' '}\n          <Link to=\"/\" className=\"submit-publish-link\">Create and Publish My Homework</Link>\n        </NavLink>\n      </Navbar>\n      <div className=\"submit-main\">\n        <div className=\"submit-form\">\n          <FormGroup>\n            <Label>Homework ID:</Label>\n            <Input onChange={handleInputChange} />\n          </FormGroup>\n          <Button onClick={handleSearch}>Search</Button>\n        </div>\n        <LoadingOverlay\n          active={showLoadingOverlay}\n          fadeSpeed={200}\n          className=\"submit-overlay\"\n          spinner={overlaySpinner}\n          text={overlayText}\n        >\n          <div className=\"submit-table\">\n            {/* <Table content={content}> */}\n\n            <Table className=\"submit-table-table\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Homework ID</th>\n                  <th>Author</th>\n                  <th>Date</th>\n                  <th>Skeleton Code</th>\n                  <th>Submit</th>\n                </tr>\n              </thead>\n              {\n              createContentList()\n            }\n            </Table>\n\n          </div>\n        </LoadingOverlay>\n\n        <div className=\"submit-per-page\">\n          <div className=\"submit-per-page-label\">Per page:</div>\n          {' '}\n          {/* <input type=\"range\" min=\"10\" value={perPage} onChange={handlePerPageChange} /> */}\n          <Input type=\"select\" value={perPage} onChange={handlePerPageChange}>\n            <option>5</option>\n            <option>10</option>\n            <option>15</option>\n            <option>20</option>\n            <option>50</option>\n          </Input>\n        </div>\n        <Pagination\n          activePage={currPage}\n          itemsCountPerPage={perPage}\n          totalItemsCount={totalPages}\n          pageRangeDisplayed={5}\n          onChange={handleChangePage}\n          innerClass=\"pagination\"\n          itemClass=\"page-item\"\n          linkClass=\"page-link\"\n        />\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default SubmitSolution;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/highlight.js/styles/school-book.css';\nimport '../node_modules/highlight.js/styles/agate.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// window.onbeforeunload = function() {\n//     return true;\n// };\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport HomeworkEditor from './HomeworkEditor';\nimport SubmitSolution from './containers/SubmitSolution';\n\n// if (process.env.NODE_ENV !== 'production') {\n//   const {whyDidYouUpdate} = require('why-did-you-update');\n//   whyDidYouUpdate(React);\n// }\nexport default () => (\n  <div>\n    <HashRouter baseName=\"/\">\n      <Switch>\n        <Route path=\"/submit\">\n          <SubmitSolution />\n        </Route>\n        <Route path=\"/\">\n          <HomeworkEditor />\n        </Route>\n\n      </Switch>\n    </HashRouter>\n  </div>\n);\n"],"sourceRoot":""}